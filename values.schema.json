{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "affinity": {
      "additionalProperties": false,
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "api": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Whether to enable the Public API",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "path": {
          "default": "api",
          "description": "Path segment for the Public API",
          "required": [],
          "title": "path",
          "type": "string"
        },
        "swagger": {
          "additionalProperties": false,
          "description": "Whether to enable the Swagger UI for the Public API",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "swagger",
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "path",
        "swagger"
      ],
      "title": "api",
      "type": "object"
    },
    "binaryData": {
      "additionalProperties": false,
      "description": "Configuration for binary data storage",
      "properties": {
        "availableModes": {
          "description": "Available modes of binary data storage. If not set, the default mode will be used. For more information, see https://docs.n8n.io/hosting/configuration/environment-variables/binary-data/",
          "items": {
            "required": []
          },
          "required": [],
          "title": "availableModes",
          "type": "array"
        },
        "localStoragePath": {
          "default": "",
          "description": "Path for binary data storage in \"filesystem\" mode. If not set, the default path will be used. For more information, see https://docs.n8n.io/hosting/configuration/environment-variables/binary-data/",
          "required": [],
          "title": "localStoragePath",
          "type": "string"
        },
        "mode": {
          "default": "default",
          "description": "The default binary data mode. default keeps binary data in memory. Set to filesystem to use the filesystem, or s3 to AWS S3. Note that binary data pruning operates on the active binary data mode. For example, if your instance stored data in S3, and you later switched to filesystem mode, n8n only prunes binary data in the filesystem. This may change in future. Valid values are 'default' | 'filesystem' | 's3'. For more information, see https://docs.n8n.io/hosting/configuration/environment-variables/binary-data/",
          "required": [],
          "title": "mode",
          "type": "string"
        },
        "s3": {
          "additionalProperties": false,
          "description": "S3-compatible external storage configurations. For more information, see https://docs.n8n.io/hosting/configuration/environment-variables/external-data-storage/",
          "properties": {
            "accessKey": {
              "default": "",
              "description": "Access key in S3-compatible external storage",
              "required": [],
              "title": "accessKey",
              "type": "string"
            },
            "accessSecret": {
              "default": "",
              "description": "Access secret in S3-compatible external storage.",
              "required": [],
              "title": "accessSecret",
              "type": "string"
            },
            "bucketName": {
              "default": "",
              "description": "Name of the n8n bucket in S3-compatible external storage.",
              "required": [],
              "title": "bucketName",
              "type": "string"
            },
            "bucketRegion": {
              "default": "us-east-1",
              "description": "Region of the n8n bucket in S3-compatible external storage. For example, us-east-1",
              "required": [],
              "title": "bucketRegion",
              "type": "string"
            },
            "existingSecret": {
              "default": "",
              "description": "This is for setting up the s3 file storage existing secret. Must contain access-key-id and secret-access-key keys.",
              "required": [],
              "title": "existingSecret",
              "type": "string"
            },
            "host": {
              "default": "",
              "description": "Host of the n8n bucket in S3-compatible external storage. For example, s3.us-east-1.amazonaws.com",
              "required": [],
              "title": "host",
              "type": "string"
            }
          },
          "required": [
            "host",
            "bucketName",
            "bucketRegion",
            "accessKey",
            "accessSecret",
            "existingSecret"
          ],
          "title": "s3",
          "type": "object"
        }
      },
      "required": [
        "availableModes",
        "mode",
        "localStoragePath",
        "s3"
      ],
      "title": "binaryData",
      "type": "object"
    },
    "db": {
      "additionalProperties": false,
      "description": "n8n database configurations",
      "properties": {
        "logging": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Whether database logging is enabled.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxQueryExecutionTime": {
              "default": 0,
              "description": "Only queries that exceed this time (ms) will be logged. Set `0` to disable.",
              "required": [],
              "title": "maxQueryExecutionTime",
              "type": "integer"
            },
            "options": {
              "default": "error",
              "description": "Database logging level. Requires `maxQueryExecutionTime` to be higher than `0`. Valid values 'query' | 'error' | 'schema' | 'warn' | 'info' | 'log' | 'all'",
              "required": [],
              "title": "options",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "options",
            "maxQueryExecutionTime"
          ],
          "title": "logging",
          "type": "object"
        },
        "postgresdb": {
          "additionalProperties": false,
          "properties": {
            "connectionTimeout": {
              "default": 20000,
              "description": "Postgres connection timeout (ms).",
              "required": [],
              "title": "connectionTimeout",
              "type": "integer"
            },
            "idleConnectionTimeout": {
              "default": 30000,
              "description": "Amount of time before an idle connection is eligible for eviction for being idle.",
              "required": [],
              "title": "idleConnectionTimeout",
              "type": "integer"
            },
            "poolSize": {
              "default": 2,
              "description": "Control how many parallel open Postgres connections n8n should have. Increasing it may help with resource utilization, but too many connections may degrade performance.",
              "required": [],
              "title": "poolSize",
              "type": "integer"
            },
            "schema": {
              "default": "public",
              "description": "The PostgreSQL schema.",
              "required": [],
              "title": "schema",
              "type": "string"
            },
            "ssl": {
              "additionalProperties": false,
              "description": "The PostgreSQL connection SSL settings. Find more information from here: https://docs.n8n.io/hosting/configuration/supported-databases-settings/#postgresdb",
              "properties": {
                "base64EncodedCertFile": {
                  "default": "",
                  "description": "The PostgreSQL base64 encoded version of SSL certificate file content.",
                  "required": [],
                  "title": "base64EncodedCertFile",
                  "type": "string"
                },
                "base64EncodedCertificateAuthorityFile": {
                  "default": "",
                  "description": "The PostgreSQL base64 encoded version of SSL certificate authority file content.",
                  "required": [],
                  "title": "base64EncodedCertificateAuthorityFile",
                  "type": "string"
                },
                "base64EncodedPrivateKeyFile": {
                  "default": "",
                  "description": "The PostgreSQL base64 encoded version of SSL private key file content.",
                  "required": [],
                  "title": "base64EncodedPrivateKeyFile",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "description": "Whether to enable SSL.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingCertFileSecret": {
                  "additionalProperties": false,
                  "description": "The PostgreSQL existing certificate file secret.",
                  "properties": {
                    "key": {
                      "default": "cert.crt",
                      "description": "The key of the certificate file in the existing secret.",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "The name of the existing secret.",
                      "required": [],
                      "title": "name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "key"
                  ],
                  "title": "existingCertFileSecret",
                  "type": "object"
                },
                "existingCertificateAuthorityFileSecret": {
                  "additionalProperties": false,
                  "description": "The PostgreSQL existing certificate authority file secret.",
                  "properties": {
                    "key": {
                      "default": "ca.crt",
                      "description": "The key of the certificate authority file in the existing secret.",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "The name of the existing secret.",
                      "required": [],
                      "title": "name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "key"
                  ],
                  "title": "existingCertificateAuthorityFileSecret",
                  "type": "object"
                },
                "existingPrivateKeyFileSecret": {
                  "additionalProperties": false,
                  "description": "The PostgreSQL existing SSL private key file secret.",
                  "properties": {
                    "key": {
                      "default": "cert.key",
                      "description": "The key of the SSL private key file in the existing secret.",
                      "required": [],
                      "title": "key",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "The name of the existing secret.",
                      "required": [],
                      "title": "name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "key"
                  ],
                  "title": "existingPrivateKeyFileSecret",
                  "type": "object"
                },
                "rejectUnauthorized": {
                  "default": true,
                  "description": "If n8n should reject unauthorized SSL connections (true) or not (false).",
                  "required": [],
                  "title": "rejectUnauthorized",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled",
                "base64EncodedCertificateAuthorityFile",
                "base64EncodedCertFile",
                "base64EncodedPrivateKeyFile",
                "existingCertificateAuthorityFileSecret",
                "existingCertFileSecret",
                "existingPrivateKeyFileSecret",
                "rejectUnauthorized"
              ],
              "title": "ssl",
              "type": "object"
            }
          },
          "required": [
            "poolSize",
            "connectionTimeout",
            "idleConnectionTimeout",
            "schema",
            "ssl"
          ],
          "title": "postgresdb",
          "type": "object"
        },
        "sqlite": {
          "additionalProperties": false,
          "properties": {
            "database": {
              "default": "database.sqlite",
              "description": "SQLite database file name",
              "required": [],
              "title": "database",
              "type": "string"
            },
            "poolSize": {
              "default": 0,
              "description": "SQLite database pool size. Set to `0` to disable pooling.",
              "required": [],
              "title": "poolSize",
              "type": "integer"
            },
            "vacuum": {
              "default": false,
              "description": "Runs VACUUM operation on startup to rebuild the database. Reduces file size and optimizes indexes. This is a long running blocking operation and increases start-up time.",
              "required": [],
              "title": "vacuum",
              "type": "boolean"
            }
          },
          "required": [
            "database",
            "poolSize",
            "vacuum"
          ],
          "title": "sqlite",
          "type": "object"
        },
        "tablePrefix": {
          "default": "",
          "description": "Prefix to use for table names.",
          "required": [],
          "title": "tablePrefix",
          "type": "string"
        },
        "type": {
          "default": "sqlite",
          "description": "Type of database to use. Valid values 'sqlite' | 'postgresdb'",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "tablePrefix",
        "type",
        "logging",
        "sqlite",
        "postgresdb"
      ],
      "title": "db",
      "type": "object"
    },
    "defaultLocale": {
      "default": "en",
      "description": "A locale identifier, compatible with the Accept-Language header. n8n doesn't support regional identifiers, such as de-AT.",
      "required": [],
      "title": "defaultLocale",
      "type": "string"
    },
    "diagnostics": {
      "additionalProperties": false,
      "properties": {
        "backendConfig": {
          "default": "1zPn7YoGC3ZXE9zLeTKLuQCB4F6;https://telemetry.n8n.io",
          "description": "Diagnostics config for backend.",
          "required": [],
          "title": "backendConfig",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Whether diagnostics are enabled.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "frontendConfig": {
          "default": "1zPn9bgWPzlQc0p8Gj1uiK6DOTn;https://telemetry.n8n.io",
          "description": "Diagnostics config for frontend.",
          "required": [],
          "title": "frontendConfig",
          "type": "string"
        },
        "postHog": {
          "additionalProperties": false,
          "properties": {
            "apiHost": {
              "default": "https://ph.n8n.io",
              "description": "API host for PostHog.",
              "required": [],
              "title": "apiHost",
              "type": "string"
            },
            "apiKey": {
              "default": "phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo",
              "description": "API key for PostHog.",
              "required": [],
              "title": "apiKey",
              "type": "string"
            }
          },
          "required": [
            "apiKey",
            "apiHost"
          ],
          "title": "postHog",
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "frontendConfig",
        "backendConfig",
        "postHog"
      ],
      "title": "diagnostics",
      "type": "object"
    },
    "dnsConfig": {
      "additionalProperties": false,
      "required": [],
      "title": "dnsConfig",
      "type": "object"
    },
    "dnsPolicy": {
      "default": "",
      "required": [],
      "title": "dnsPolicy",
      "type": "string"
    },
    "encryptionKey": {
      "default": "",
      "description": "If you install n8n first time, you can keep this empty and it will be auto generated and never change again. If you already have a encryption key generated before, please use it here.",
      "required": [],
      "title": "encryptionKey",
      "type": "string"
    },
    "existingEncryptionKeySecret": {
      "default": "",
      "description": "The name of an existing secret with encryption key. The secret must contain a key with the name N8N_ENCRYPTION_KEY.",
      "required": [],
      "title": "existingEncryptionKeySecret",
      "type": "string"
    },
    "externalPostgresql": {
      "additionalProperties": false,
      "description": "External PostgreSQL parameters",
      "properties": {
        "database": {
          "default": "n8n",
          "description": "The name of the external PostgreSQL database. For more information: https://docs.n8n.io/hosting/configuration/supported-databases-settings/#required-permissions",
          "required": [],
          "title": "database",
          "type": "string"
        },
        "existingSecret": {
          "default": "",
          "description": "The name of an existing secret with PostgreSQL (must contain key `postgres-password`) and credentials.\nWhen it's set, the `externalPostgresql.password` parameter is ignored",
          "required": [],
          "title": "existingSecret",
          "type": "string"
        },
        "host": {
          "default": "",
          "description": "External PostgreSQL server host",
          "required": [],
          "title": "host",
          "type": "string"
        },
        "password": {
          "default": "",
          "description": "External PostgreSQL password",
          "required": [],
          "title": "password",
          "type": "string"
        },
        "port": {
          "default": 5432,
          "description": "External PostgreSQL server port",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "username": {
          "default": "postgres",
          "description": "External PostgreSQL username",
          "required": [],
          "title": "username",
          "type": "string"
        }
      },
      "required": [
        "host",
        "username",
        "password",
        "port",
        "database",
        "existingSecret"
      ],
      "title": "externalPostgresql",
      "type": "object"
    },
    "externalRedis": {
      "additionalProperties": false,
      "description": "External Redis parameters",
      "properties": {
        "clusterNodes": {
          "description": "List of Redis Cluster nodes. Setting this variable will create a Redis Cluster client instead of a Redis client, and n8n will ignore `externalRedis.host` and `externalRedis.port`.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "clusterNodes",
          "type": "array"
        },
        "database": {
          "default": 0,
          "description": "Redis database for Bull queue.",
          "required": [],
          "title": "database",
          "type": "integer"
        },
        "dualStack": {
          "default": false,
          "description": "Enable dual-stack support (IPv4 and IPv6) on Redis connections.",
          "required": [],
          "title": "dualStack",
          "type": "boolean"
        },
        "existingSecret": {
          "default": "",
          "description": "The name of an existing secret with Redis (must contain key `redis-password`) and Sentinel credentials.\nWhen it's set, the `externalRedis.password` parameter is ignored",
          "required": [],
          "title": "existingSecret",
          "type": "string"
        },
        "host": {
          "default": "",
          "description": "External Redis server host",
          "required": [],
          "title": "host",
          "type": "string"
        },
        "password": {
          "default": "",
          "description": "External Redis password",
          "required": [],
          "title": "password",
          "type": "string"
        },
        "port": {
          "default": 6379,
          "description": "External Redis server port",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "tls": {
          "additionalProperties": false,
          "description": "- host: redis-1\n  port: 6379\n- host: redis-2\n  port: 6379\nPlaceholder for future Redis TLS certificates",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable TLS on Redis connections.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "tls",
          "type": "object"
        },
        "username": {
          "default": "",
          "description": "External Redis username",
          "required": [],
          "title": "username",
          "type": "string"
        }
      },
      "required": [
        "database",
        "host",
        "username",
        "password",
        "port",
        "existingSecret",
        "clusterNodes",
        "tls",
        "dualStack"
      ],
      "title": "externalRedis",
      "type": "object"
    },
    "fullnameOverride": {
      "default": "",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "gracefulShutdownTimeout": {
      "default": 30,
      "description": "graceful shutdown timeout in seconds",
      "required": [],
      "title": "gracefulShutdownTimeout",
      "type": "integer"
    },
    "image": {
      "additionalProperties": false,
      "description": "This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "This sets the pull policy for images.",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "n8nio/n8n",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "",
          "description": "Overrides the image tag whose default is the chart appVersion.",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "additionalProperties": false,
      "description": "This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/",
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "items": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "host": {
                    "default": "n8n.local",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "anyOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "Prefix",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [
                            "path",
                            "pathType"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [
                  "host",
                  "paths"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "className",
        "annotations",
        "hosts",
        "tls"
      ],
      "title": "ingress",
      "type": "object"
    },
    "license": {
      "additionalProperties": false,
      "description": "n8n enterprise license configurations",
      "properties": {
        "activationKey": {
          "default": "",
          "description": "Activation key to initialize license. Not applicable if the n8n instance was already activated. For more information please refer to the following link: https://docs.n8n.io/enterprise-key/",
          "required": [],
          "title": "activationKey",
          "type": "string"
        },
        "autoNenew": {
          "additionalProperties": false,
          "description": "The auto new license configuration",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enables (true) or disables (false) autorenewal for licenses. If disabled, you need to manually renew the license every 10 days by navigating to Settings \u003e Usage and plan, and pressing F5. Failure to renew the license will disable Enterprise features.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "offsetInHours": {
              "default": 72,
              "description": "Time in hours before expiry a license should automatically renew.",
              "required": [],
              "title": "offsetInHours",
              "type": "integer"
            }
          },
          "required": [
            "enabled",
            "offsetInHours"
          ],
          "title": "autoNenew",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Whether to enable the enterprise license",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingActivationKeySecret": {
          "default": "",
          "description": "The name of an existing secret with license activation key. The secret must contain a key with the name N8N_LICENSE_ACTIVATION_KEY.",
          "required": [],
          "title": "existingActivationKeySecret",
          "type": "string"
        },
        "serverUrl": {
          "default": "http://license.n8n.io/v1",
          "description": "Server URL to retrieve license.",
          "required": [],
          "title": "serverUrl",
          "type": "string"
        },
        "tenantId": {
          "default": 1,
          "description": "Tenant ID associated with the license. Only set this variable if explicitly instructed by n8n.",
          "required": [],
          "title": "tenantId",
          "type": "integer"
        }
      },
      "required": [
        "enabled",
        "activationKey",
        "existingActivationKeySecret",
        "autoNenew",
        "serverUrl",
        "tenantId"
      ],
      "title": "license",
      "type": "object"
    },
    "log": {
      "additionalProperties": false,
      "description": "n8n log configurations",
      "properties": {
        "file": {
          "additionalProperties": false,
          "properties": {
            "location": {
              "default": "logs/n8n.log",
              "description": "Location of the log files inside `~/.n8n`. Only for `file` log output.",
              "required": [],
              "title": "location",
              "type": "string"
            },
            "maxcount": {
              "default": "100",
              "description": "Max number of log files to keep, or max number of days to keep logs for. Once the limit is reached, the oldest log files will be rotated out. If using days, append a `d` suffix. Only for `file` log output.",
              "required": [],
              "title": "maxcount",
              "type": "string"
            },
            "maxsize": {
              "default": 16,
              "description": "The maximum size (in MB) for each log file. By default, n8n uses 16 MB.",
              "required": [],
              "title": "maxsize",
              "type": "integer"
            }
          },
          "required": [
            "location",
            "maxsize",
            "maxcount"
          ],
          "title": "file",
          "type": "object"
        },
        "level": {
          "default": "info",
          "description": "The log output level. The available options are (from lowest to highest level) are error, warn, info, and debug. The default value is info. You can learn more about these options [here](https://docs.n8n.io/hosting/logging-monitoring/logging/#log-levels).",
          "required": [],
          "title": "level",
          "type": "string"
        },
        "output": {
          "description": "Where to output logs to. Options are: `console` or `file` or both.",
          "items": {
            "anyOf": [
              {
                "required": [],
                "type": "string"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "output",
          "type": "array"
        },
        "scopes": {
          "description": "Scopes to filter logs by. Nothing is filtered by default. Supported log scopes: concurrency, external-secrets, license, multi-main-setup, pubsub, redis, scaling, waiting-executions",
          "items": {
            "required": []
          },
          "required": [],
          "title": "scopes",
          "type": "array"
        }
      },
      "required": [
        "level",
        "output",
        "scopes",
        "file"
      ],
      "title": "log",
      "type": "object"
    },
    "main": {
      "additionalProperties": false,
      "description": "Main node configurations",
      "properties": {
        "affinity": {
          "additionalProperties": false,
          "description": "Main node affinity. For more information checkout: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": false,
              "description": "Whether autoscaling is enabled.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 10,
              "description": "The maximum number of replicas.",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 2,
              "description": "The minimum number of replicas.",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            }
          },
          "required": [
            "enabled",
            "minReplicas",
            "maxReplicas"
          ],
          "title": "autoscaling",
          "type": "object"
        },
        "config": {
          "additionalProperties": false,
          "properties": {
            "n8n": {
              "additionalProperties": false,
              "properties": {
                "editor_base_url": {
                  "default": "",
                  "required": [],
                  "title": "editor_base_url",
                  "type": "string"
                }
              },
              "required": [
                "editor_base_url"
              ],
              "title": "n8n",
              "type": "object"
            }
          },
          "required": [
            "n8n"
          ],
          "title": "config",
          "type": "object"
        },
        "count": {
          "default": 1,
          "description": "Number of main nodes. Only enterprise license users can have one leader main node and mutiple follower main nodes.",
          "required": [],
          "title": "count",
          "type": "integer"
        },
        "deploymentStrategy": {
          "additionalProperties": false,
          "properties": {
            "rollingUpdate": {
              "additionalProperties": false,
              "properties": {
                "maxSurge": {
                  "default": "25%",
                  "required": [],
                  "title": "maxSurge",
                  "type": "string"
                },
                "maxUnavailable": {
                  "default": "25%",
                  "required": [],
                  "title": "maxUnavailable",
                  "type": "string"
                }
              },
              "required": [
                "maxSurge",
                "maxUnavailable"
              ],
              "title": "rollingUpdate",
              "type": "object"
            },
            "type": {
              "default": "RollingUpdate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [
            "type",
            "rollingUpdate"
          ],
          "title": "deploymentStrategy",
          "type": "object"
        },
        "editorBaseUrl": {
          "default": "",
          "description": "Editor based URL. If it's not defined and ingress definition exists, ingress host will be used.",
          "required": [],
          "title": "editorBaseUrl",
          "type": "string"
        },
        "extraContainers": {
          "description": "Additional containers for the main pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnvVars": {
          "additionalProperties": false,
          "description": "Extra environment variables",
          "properties": {
            "N8N_LISTEN_ADDRESS": {
              "default": "0.0.0.0",
              "required": [],
              "title": "N8N_LISTEN_ADDRESS",
              "type": "string"
            }
          },
          "required": [
            "N8N_LISTEN_ADDRESS"
          ],
          "title": "extraEnvVars",
          "type": "object"
        },
        "extraSecretNamesForEnvFrom": {
          "description": "Extra secrets for environment variables",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraSecretNamesForEnvFrom",
          "type": "array"
        },
        "forceToUseStatefulset": {
          "default": false,
          "description": "Force to use statefulset for the main pod. If true, the main pod will be created as a statefulset.",
          "required": [],
          "title": "forceToUseStatefulset",
          "type": "boolean"
        },
        "hostAliases": {
          "description": "Host aliases for the main pod. For more information checkout: https://kubernetes.io/docs/tasks/network/customize-hosts-file-for-pods/#adding-additional-entries-with-hostaliases",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "initContainers": {
          "description": "Additional init containers for the main pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": false,
          "description": "This is to setup the liveness probe for the main pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "livenessProbe",
          "type": "object"
        },
        "pdb": {
          "additionalProperties": false,
          "description": "Whether to enable the PodDisruptionBudget for the main pod.",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Whether to enable the PodDisruptionBudget",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": 0,
              "description": "Maximum number of unavailable replicas",
              "required": [],
              "title": "maxUnavailable",
              "type": "integer"
            },
            "minAvailable": {
              "default": 1,
              "description": "Minimum number of available replicas",
              "required": [],
              "title": "minAvailable",
              "type": "integer"
            }
          },
          "required": [
            "enabled",
            "minAvailable",
            "maxUnavailable"
          ],
          "title": "pdb",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": false,
          "description": "Persistence configuration for the main pod",
          "properties": {
            "accessMode": {
              "default": "ReadWriteOnce",
              "description": "Access mode for persistence",
              "required": [],
              "title": "accessMode",
              "type": "string"
            },
            "annotations": {
              "additionalProperties": false,
              "description": "Annotations for persistence",
              "properties": {
                "helm.sh/resource-policy": {
                  "default": "keep",
                  "required": [],
                  "title": "helm.sh/resource-policy",
                  "type": "string"
                }
              },
              "required": [
                "helm.sh/resource-policy"
              ],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Whether to enable persistence",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "existingClaim": {
              "default": "",
              "description": "Existing claim to use for persistence",
              "required": [],
              "title": "existingClaim",
              "type": "string"
            },
            "labels": {
              "additionalProperties": false,
              "description": "Labels for persistence",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "mountPath": {
              "default": "/home/node/.n8n",
              "description": "Mount path for persistence",
              "required": [],
              "title": "mountPath",
              "type": "string"
            },
            "size": {
              "default": "8Gi",
              "description": "Size for persistence",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "",
              "description": "Storage class for persistence",
              "required": [],
              "title": "storageClass",
              "type": "string"
            },
            "subPath": {
              "default": "",
              "description": "Sub path for persistence",
              "required": [],
              "title": "subPath",
              "type": "string"
            },
            "volumeName": {
              "default": "",
              "description": "Name of the volume to use for persistence",
              "required": [],
              "title": "volumeName",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "volumeName",
            "existingClaim",
            "mountPath",
            "subPath",
            "storageClass",
            "accessMode",
            "size",
            "annotations",
            "labels"
          ],
          "title": "persistence",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": false,
          "description": "This is to setup the readiness probe for the main pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz/readiness",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "readinessProbe",
          "type": "object"
        },
        "resources": {
          "additionalProperties": false,
          "description": "This block is for setting up the resource management for the main pod more information can be found here: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "runtimeClassName": {
          "default": "",
          "description": "Runtime class name for the main pod. For more information checkout: https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "required": [],
          "title": "runtimeClassName",
          "type": "string"
        },
        "service": {
          "additionalProperties": false,
          "description": "This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/",
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "description": "Additional service annotations",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "description": "Whether to enable the service",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": false,
              "description": "Additional service labels",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "name": {
              "default": "http",
              "description": "Default Service name",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "port": {
              "default": 5678,
              "description": "This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "type",
            "port",
            "name",
            "annotations",
            "labels"
          ],
          "title": "service",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": false,
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "description": "Annotations to add to the service account",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "description": "Automatically mount a ServiceAccount's API credentials?",
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "description": "Specifies whether a service account should be created",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "n8n-sa",
              "description": "The name of the service account to use. If not set and create is true, a name is generated using the fullname template",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "create",
            "automount",
            "annotations",
            "name"
          ],
          "title": "serviceAccount",
          "type": "object"
        },
        "volumeMounts": {
          "description": "Additional volumeMounts on the output Deployment definition.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumeMounts",
          "type": "array"
        },
        "volumes": {
          "description": "Additional volumes on the output Deployment definition.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumes",
          "type": "array"
        }
      },
      "required": [
        "config",
        "deploymentStrategy",
        "count",
        "editorBaseUrl",
        "pdb",
        "resources",
        "livenessProbe",
        "readinessProbe",
        "forceToUseStatefulset",
        "persistence",
        "extraEnvVars",
        "extraSecretNamesForEnvFrom",
        "volumes",
        "volumeMounts",
        "initContainers",
        "extraContainers",
        "affinity",
        "hostAliases",
        "runtimeClassName",
        "service",
        "serviceAccount",
        "autoscaling"
      ],
      "title": "main",
      "type": "object"
    },
    "minio": {
      "additionalProperties": false,
      "description": "Minio configuration",
      "properties": {
        "buckets": {
          "description": "Minio buckets",
          "items": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "default": "n8n-bucket",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "policy": {
                    "default": "none",
                    "description": "Policy to be set on the\nbucket [none|download|upload|public]",
                    "required": [],
                    "title": "policy",
                    "type": "string"
                  },
                  "purge": {
                    "default": false,
                    "description": "Purge if bucket exists already",
                    "required": [],
                    "title": "purge",
                    "type": "boolean"
                  },
                  "versioning": {
                    "default": false,
                    "description": "set versioning for\nbucket [true|false]",
                    "required": [],
                    "title": "versioning",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "policy",
                  "purge",
                  "versioning"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "buckets",
          "type": "array"
        },
        "consoleIngress": {
          "additionalProperties": false,
          "description": "Minio console ingress",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable ingress",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "Ingress hosts",
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "path": {
              "default": "/",
              "description": "Ingress path",
              "required": [],
              "title": "path",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "hosts",
            "path"
          ],
          "title": "consoleIngress",
          "type": "object"
        },
        "deploymentUpdate": {
          "additionalProperties": false,
          "description": "Minio deployment update strategy",
          "properties": {
            "type": {
              "default": "Recreate",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "deploymentUpdate",
          "type": "object"
        },
        "drivesPerNode": {
          "default": 1,
          "description": "Number of drives attached to a node",
          "required": [],
          "title": "drivesPerNode",
          "type": "integer"
        },
        "enabled": {
          "default": false,
          "description": "Enable minio",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "ingress": {
          "additionalProperties": false,
          "description": "Minio ingress. n8n will use this ingress to access Minio. It's required when binaryData.mode has s3.",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable ingress",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "Ingress hosts",
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "hosts",
              "type": "array"
            },
            "path": {
              "default": "/",
              "description": "Ingress path",
              "required": [],
              "title": "path",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "hosts",
            "path"
          ],
          "title": "ingress",
          "type": "object"
        },
        "mode": {
          "default": "standalone",
          "description": "Minio mode",
          "required": [],
          "title": "mode",
          "type": "string"
        },
        "persistence": {
          "additionalProperties": false,
          "description": "Minio persistence",
          "properties": {
            "accessMode": {
              "default": "ReadWriteOnce",
              "description": "Minio persistence access mode",
              "required": [],
              "title": "accessMode",
              "type": "string"
            },
            "annotations": {
              "additionalProperties": false,
              "description": "Minio persistence annotations",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "description": "Enable persistence",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "existingClaim": {
              "default": "",
              "description": "Minio persistence existing claim",
              "required": [],
              "title": "existingClaim",
              "type": "string"
            },
            "size": {
              "default": "40Gi",
              "description": "Minio persistence size",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "",
              "description": "Minio persistence storage class",
              "required": [],
              "title": "storageClass",
              "type": "string"
            },
            "subPath": {
              "default": "",
              "description": "Minio persistence sub path",
              "required": [],
              "title": "subPath",
              "type": "string"
            },
            "volumeName": {
              "default": "",
              "description": "Minio persistence volume name",
              "required": [],
              "title": "volumeName",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "annotations",
            "existingClaim",
            "storageClass",
            "volumeName",
            "accessMode",
            "size",
            "subPath"
          ],
          "title": "persistence",
          "type": "object"
        },
        "policies": {
          "description": "Minio policies",
          "items": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "default": "n8n-policy",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "statements": {
                    "items": {
                      "anyOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "actions": {
                              "items": {
                                "anyOf": [
                                  {
                                    "required": [],
                                    "type": "string"
                                  },
                                  {
                                    "required": [],
                                    "type": "string"
                                  },
                                  {
                                    "required": [],
                                    "type": "string"
                                  },
                                  {
                                    "required": [],
                                    "type": "string"
                                  },
                                  {
                                    "required": [],
                                    "type": "string"
                                  }
                                ],
                                "required": []
                              },
                              "required": [],
                              "title": "actions",
                              "type": "array"
                            },
                            "resources": {
                              "items": {
                                "anyOf": [
                                  {
                                    "required": [],
                                    "type": "string"
                                  }
                                ],
                                "required": []
                              },
                              "required": [],
                              "title": "resources",
                              "type": "array"
                            }
                          },
                          "required": [
                            "actions",
                            "resources"
                          ],
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "actions": {
                              "items": {
                                "anyOf": [
                                  {
                                    "required": [],
                                    "type": "string"
                                  },
                                  {
                                    "required": [],
                                    "type": "string"
                                  },
                                  {
                                    "required": [],
                                    "type": "string"
                                  }
                                ],
                                "required": []
                              },
                              "required": [],
                              "title": "actions",
                              "type": "array"
                            },
                            "resources": {
                              "items": {
                                "anyOf": [
                                  {
                                    "required": [],
                                    "type": "string"
                                  }
                                ],
                                "required": []
                              },
                              "required": [],
                              "title": "resources",
                              "type": "array"
                            }
                          },
                          "required": [
                            "actions",
                            "resources"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "statements",
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "statements"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "policies",
          "type": "array"
        },
        "pools": {
          "default": 1,
          "description": "Number of expanded MinIO clusters",
          "required": [],
          "title": "pools",
          "type": "integer"
        },
        "replicas": {
          "default": 1,
          "description": "Number of MinIO containers running",
          "required": [],
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": false,
          "description": "Minio resources",
          "properties": {
            "requests": {
              "additionalProperties": false,
              "description": "Minio requests",
              "properties": {
                "memory": {
                  "default": "1Gi",
                  "description": "Minio requests memory",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [
                "memory"
              ],
              "title": "requests",
              "type": "object"
            }
          },
          "required": [
            "requests"
          ],
          "title": "resources",
          "type": "object"
        },
        "rootPassword": {
          "default": "",
          "description": "Minio root password. Length should be at least 8 characters.",
          "required": [],
          "title": "rootPassword",
          "type": "string"
        },
        "rootUser": {
          "default": "",
          "description": "Minio root user. Length should be at least 3 characters.",
          "required": [],
          "title": "rootUser",
          "type": "string"
        },
        "statefulSetUpdate": {
          "additionalProperties": false,
          "description": "Minio statefulset update strategy",
          "properties": {
            "updateStrategy": {
              "default": "Recreate",
              "required": [],
              "title": "updateStrategy",
              "type": "string"
            }
          },
          "required": [
            "updateStrategy"
          ],
          "title": "statefulSetUpdate",
          "type": "object"
        },
        "users": {
          "description": "Minio users",
          "items": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "accessKey": {
                    "default": "n8n-user",
                    "required": [],
                    "title": "accessKey",
                    "type": "string"
                  },
                  "policy": {
                    "default": "n8n-policy",
                    "description": "n8n user policy",
                    "required": [],
                    "title": "policy",
                    "type": "string"
                  },
                  "secretKey": {
                    "default": "Change_Me",
                    "description": "n8n user secret key",
                    "required": [],
                    "title": "secretKey",
                    "type": "string"
                  }
                },
                "required": [
                  "accessKey",
                  "secretKey",
                  "policy"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "users",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "mode",
        "deploymentUpdate",
        "statefulSetUpdate",
        "drivesPerNode",
        "replicas",
        "pools",
        "rootUser",
        "rootPassword",
        "resources",
        "persistence",
        "ingress",
        "consoleIngress",
        "policies",
        "users",
        "buckets"
      ],
      "title": "minio",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "This is to override the chart name.",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "nodeSelector": {
      "additionalProperties": false,
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "nodes": {
      "additionalProperties": false,
      "description": "Node configurations for built-in and external npm packages",
      "properties": {
        "builtin": {
          "additionalProperties": false,
          "description": "Enable built-in node functions (e.g., HTTP Request, Code Node, etc.)",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enable built-in modules for the Code node",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "modules": {
              "description": "List of built-in Node.js modules to allow in the Code node (e.g., crypto, fs). Use '*' to allow all.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "modules",
              "type": "array"
            }
          },
          "required": [
            "enabled",
            "modules"
          ],
          "title": "builtin",
          "type": "object"
        },
        "external": {
          "additionalProperties": false,
          "description": "External npm packages to install and allow in the Code node",
          "properties": {
            "allowAll": {
              "default": false,
              "description": "Allow all external npm packages",
              "required": [],
              "title": "allowAll",
              "type": "boolean"
            },
            "packages": {
              "description": "List of npm package names and versions (e.g., \"package-name",
              "items": {
                "required": []
              },
              "required": [],
              "title": "packages",
              "type": "array"
            },
            "reinstallMissingPackages": {
              "default": false,
              "description": "Whether to reinstall missing packages. For more information, see https://docs.n8n.io/integrations/community-nodes/troubleshooting/#error-missing-packages",
              "required": [],
              "title": "reinstallMissingPackages",
              "type": "boolean"
            }
          },
          "required": [
            "allowAll",
            "reinstallMissingPackages",
            "packages"
          ],
          "title": "external",
          "type": "object"
        },
        "initContainer": {
          "additionalProperties": false,
          "description": "Image for the init container to install npm packages",
          "properties": {
            "image": {
              "additionalProperties": false,
              "description": "Image for the init container to install npm packages",
              "properties": {
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "description": "Pull policy for the init container to install npm packages",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "repository": {
                  "default": "node",
                  "description": "Repository for the init container to install npm packages",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "20-alpine",
                  "description": "Tag for the init container to install npm packages",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [
                "repository",
                "tag",
                "pullPolicy"
              ],
              "title": "image",
              "type": "object"
            },
            "resources": {
              "additionalProperties": false,
              "description": "Resources for the init container",
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image",
            "resources"
          ],
          "title": "initContainer",
          "type": "object"
        }
      },
      "required": [
        "builtin",
        "external",
        "initContainer"
      ],
      "title": "nodes",
      "type": "object"
    },
    "npmRegistry": {
      "additionalProperties": false,
      "description": "Configuration for private npm registry",
      "properties": {
        "customNpmrc": {
          "default": "",
          "description": "Custom .npmrc content (optional, overrides secret if provided)",
          "required": [],
          "title": "customNpmrc",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Enable private npm registry",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "secretKey": {
          "default": "npmrc",
          "description": "Key in the secret for the .npmrc content or auth token",
          "required": [],
          "title": "secretKey",
          "type": "string"
        },
        "secretName": {
          "default": "",
          "description": "Name of the Kubernetes secret containing npm registry credentials",
          "required": [],
          "title": "secretName",
          "type": "string"
        },
        "url": {
          "default": "",
          "description": "URL of the private npm registry (e.g., https://registry.npmjs.org/)",
          "required": [],
          "title": "url",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "url",
        "secretName",
        "secretKey",
        "customNpmrc"
      ],
      "title": "npmRegistry",
      "type": "object"
    },
    "podAnnotations": {
      "additionalProperties": false,
      "description": "This is for setting Kubernetes Annotations to a Pod. For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podLabels": {
      "additionalProperties": false,
      "description": "This is for setting Kubernetes Labels to a Pod. For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
      "required": [],
      "title": "podLabels",
      "type": "object"
    },
    "podSecurityContext": {
      "additionalProperties": false,
      "description": "This is for setting Security Context to a Pod. For more information checkout: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
      "properties": {
        "fsGroup": {
          "default": 1000,
          "required": [],
          "title": "fsGroup",
          "type": "integer"
        },
        "fsGroupChangePolicy": {
          "default": "OnRootMismatch",
          "required": [],
          "title": "fsGroupChangePolicy",
          "type": "string"
        }
      },
      "required": [
        "fsGroup",
        "fsGroupChangePolicy"
      ],
      "title": "podSecurityContext",
      "type": "object"
    },
    "postgresql": {
      "additionalProperties": false,
      "description": "Bitnami PostgreSQL configuration",
      "properties": {
        "architecture": {
          "default": "standalone",
          "description": "Enable postgresql architecture.",
          "required": [],
          "title": "architecture",
          "type": "string"
        },
        "auth": {
          "additionalProperties": false,
          "description": "This is for setting up the auth.",
          "properties": {
            "database": {
              "default": "n8n",
              "description": "The name of the PostgreSQL database. For more information: https://docs.n8n.io/hosting/configuration/supported-databases-settings/#required-permissions",
              "required": [],
              "title": "database",
              "type": "string"
            },
            "password": {
              "default": "",
              "description": "This is for setting up the auth password.",
              "required": [],
              "title": "password",
              "type": "string"
            },
            "username": {
              "default": "",
              "description": "This is for setting up the auth username.",
              "required": [],
              "title": "username",
              "type": "string"
            }
          },
          "required": [
            "username",
            "password",
            "database"
          ],
          "title": "auth",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Enable postgresql",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "primary": {
          "additionalProperties": false,
          "description": "This is for setting up the primary service.",
          "properties": {
            "persistence": {
              "additionalProperties": false,
              "description": "This is for setting up the persistence.",
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "This is for setting up the persistence enabled.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "This is for setting up the persistence existing claim.",
                  "required": [],
                  "title": "existingClaim",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "existingClaim"
              ],
              "title": "persistence",
              "type": "object"
            },
            "service": {
              "additionalProperties": false,
              "description": "This is for setting up the primary service.",
              "properties": {
                "ports": {
                  "additionalProperties": false,
                  "description": "This is for setting up the service ports.",
                  "properties": {
                    "postgresql": {
                      "default": 5432,
                      "description": "This is for setting up the postgresql port.",
                      "required": [],
                      "title": "postgresql",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "postgresql"
                  ],
                  "title": "ports",
                  "type": "object"
                }
              },
              "required": [
                "ports"
              ],
              "title": "service",
              "type": "object"
            }
          },
          "required": [
            "service",
            "persistence"
          ],
          "title": "primary",
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "architecture",
        "primary",
        "auth"
      ],
      "title": "postgresql",
      "type": "object"
    },
    "redis": {
      "additionalProperties": false,
      "description": "Bitnami Redis configuration",
      "properties": {
        "architecture": {
          "default": "standalone",
          "description": "Enable redis architecture.",
          "required": [],
          "title": "architecture",
          "type": "string"
        },
        "auth": {
          "additionalProperties": false,
          "description": "This is for setting up the auth.",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable password authentication",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "auth",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Enable redis",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "master": {
          "additionalProperties": false,
          "properties": {
            "persistence": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "title": "persistence",
              "type": "object"
            },
            "service": {
              "additionalProperties": false,
              "properties": {
                "ports": {
                  "additionalProperties": false,
                  "properties": {
                    "redis": {
                      "default": 6379,
                      "description": "Redis master service port",
                      "required": [],
                      "title": "redis",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "redis"
                  ],
                  "title": "ports",
                  "type": "object"
                }
              },
              "required": [
                "ports"
              ],
              "title": "service",
              "type": "object"
            }
          },
          "required": [
            "service",
            "persistence"
          ],
          "title": "master",
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "architecture",
        "auth",
        "master"
      ],
      "title": "redis",
      "type": "object"
    },
    "route": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "host": {
          "default": "n8n-n8n.apps.rosa.cmzih-zqhto-9xr.zxi0.p3.openshiftapps.com",
          "required": [],
          "title": "host",
          "type": "string"
        },
        "tls": {
          "additionalProperties": false,
          "properties": {
            "termination": {
              "default": "edge",
              "required": [],
              "title": "termination",
              "type": "string"
            }
          },
          "required": [
            "termination"
          ],
          "title": "tls",
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "host",
        "tls",
        "annotations"
      ],
      "title": "route",
      "type": "object"
    },
    "securityContext": {
      "additionalProperties": false,
      "description": "This is for setting Security Context to a Container. For more information checkout: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
      "properties": {
        "allowPrivilegeEscalation": {
          "default": false,
          "required": [],
          "title": "allowPrivilegeEscalation",
          "type": "boolean"
        },
        "capabilities": {
          "additionalProperties": false,
          "properties": {
            "drop": {
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "drop",
              "type": "array"
            }
          },
          "required": [
            "drop"
          ],
          "title": "capabilities",
          "type": "object"
        },
        "privileged": {
          "default": false,
          "required": [],
          "title": "privileged",
          "type": "boolean"
        },
        "readOnlyRootFilesystem": {
          "default": false,
          "required": [],
          "title": "readOnlyRootFilesystem",
          "type": "boolean"
        },
        "runAsGroup": {
          "default": 1000,
          "required": [],
          "title": "runAsGroup",
          "type": "integer"
        },
        "runAsNonRoot": {
          "default": true,
          "required": [],
          "title": "runAsNonRoot",
          "type": "boolean"
        },
        "runAsUser": {
          "default": 1000,
          "required": [],
          "title": "runAsUser",
          "type": "integer"
        }
      },
      "required": [
        "allowPrivilegeEscalation",
        "capabilities",
        "readOnlyRootFilesystem",
        "runAsNonRoot",
        "privileged",
        "runAsUser",
        "runAsGroup"
      ],
      "title": "securityContext",
      "type": "object"
    },
    "sentry": {
      "additionalProperties": false,
      "properties": {
        "backendDsn": {
          "default": "",
          "description": "Sentry DSN for backend.",
          "required": [],
          "title": "backendDsn",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Whether sentry is enabled.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "externalTaskRunnersDsn": {
          "default": "",
          "description": "Sentry DSN for external task runners.",
          "required": [],
          "title": "externalTaskRunnersDsn",
          "type": "string"
        },
        "frontendDsn": {
          "default": "",
          "description": "Sentry DSN for frontend.",
          "required": [],
          "title": "frontendDsn",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "backendDsn",
        "frontendDsn",
        "externalTaskRunnersDsn"
      ],
      "title": "sentry",
      "type": "object"
    },
    "serviceMonitor": {
      "additionalProperties": false,
      "description": "The service monitor configuration. Please refer to the following link for more information: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api-reference/api.md",
      "properties": {
        "enabled": {
          "default": false,
          "description": "When set true then use a ServiceMonitor to configure scraping",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "include": {
          "additionalProperties": false,
          "description": "Whether to include metrics",
          "properties": {
            "apiEndpoints": {
              "default": false,
              "description": "Whether to include api endpoints",
              "required": [],
              "title": "apiEndpoints",
              "type": "boolean"
            },
            "apiMethodLabel": {
              "default": false,
              "description": "Whether to include api method label",
              "required": [],
              "title": "apiMethodLabel",
              "type": "boolean"
            },
            "apiPathLabel": {
              "default": false,
              "description": "Whether to include api path label",
              "required": [],
              "title": "apiPathLabel",
              "type": "boolean"
            },
            "apiStatusCodeLabel": {
              "default": false,
              "description": "Whether to include api status code label",
              "required": [],
              "title": "apiStatusCodeLabel",
              "type": "boolean"
            },
            "cacheMetrics": {
              "default": false,
              "description": "Whether to include cache metrics",
              "required": [],
              "title": "cacheMetrics",
              "type": "boolean"
            },
            "credentialTypeLabel": {
              "default": false,
              "description": "Whether to include credential type label",
              "required": [],
              "title": "credentialTypeLabel",
              "type": "boolean"
            },
            "defaultMetrics": {
              "default": true,
              "description": "Whether to include default metrics",
              "required": [],
              "title": "defaultMetrics",
              "type": "boolean"
            },
            "messageEventBusMetrics": {
              "default": false,
              "description": "Whether to include message event bus metrics",
              "required": [],
              "title": "messageEventBusMetrics",
              "type": "boolean"
            },
            "nodeTypeLabel": {
              "default": false,
              "description": "Whether to include node type label",
              "required": [],
              "title": "nodeTypeLabel",
              "type": "boolean"
            },
            "queueMetrics": {
              "default": false,
              "description": "Whether to include queue metrics",
              "required": [],
              "title": "queueMetrics",
              "type": "boolean"
            },
            "workflowIdLabel": {
              "default": false,
              "description": "Whether to include workflow id label",
              "required": [],
              "title": "workflowIdLabel",
              "type": "boolean"
            }
          },
          "required": [
            "defaultMetrics",
            "cacheMetrics",
            "messageEventBusMetrics",
            "workflowIdLabel",
            "nodeTypeLabel",
            "credentialTypeLabel",
            "apiEndpoints",
            "apiPathLabel",
            "apiMethodLabel",
            "apiStatusCodeLabel",
            "queueMetrics"
          ],
          "title": "include",
          "type": "object"
        },
        "interval": {
          "default": "30s",
          "description": "Set how frequently Prometheus should scrape",
          "required": [],
          "title": "interval",
          "type": "string"
        },
        "labels": {
          "additionalProperties": false,
          "description": "Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator",
          "properties": {
            "release": {
              "default": "prometheus",
              "description": "default `kube prometheus stack` helm chart serviceMonitor selector label\nMostly it's your prometheus helm release name. Please find more information from here:\nhttps://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/platform/troubleshooting.md#troubleshooting-servicemonitor-changes",
              "required": [],
              "title": "release",
              "type": "string"
            }
          },
          "required": [
            "release"
          ],
          "title": "labels",
          "type": "object"
        },
        "metricRelabelings": {
          "description": "Set of rules to relabel your exist metric labels",
          "items": {
            "required": []
          },
          "required": [],
          "title": "metricRelabelings",
          "type": "array"
        },
        "metricsPrefix": {
          "default": "n8n_",
          "description": "The prefix for the metrics",
          "required": [],
          "title": "metricsPrefix",
          "type": "string"
        },
        "namespace": {
          "default": "",
          "description": "Set the namespace the ServiceMonitor should be deployed. If empty, the ServiceMonitor will be deployed in the same namespace as the n8n chart.",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "targetLabels": {
          "description": "Set of labels to transfer on the Kubernetes Service onto the target.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "targetLabels",
          "type": "array"
        },
        "timeout": {
          "default": "10s",
          "description": "Set timeout for scrape",
          "required": [],
          "title": "timeout",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "namespace",
        "interval",
        "labels",
        "timeout",
        "targetLabels",
        "metricRelabelings",
        "metricsPrefix",
        "include"
      ],
      "title": "serviceMonitor",
      "type": "object"
    },
    "strategy": {
      "additionalProperties": false,
      "description": "This will set the deployment strategy more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy",
      "properties": {
        "rollingUpdate": {
          "additionalProperties": false,
          "properties": {
            "maxSurge": {
              "default": "25%",
              "required": [],
              "title": "maxSurge",
              "type": "string"
            },
            "maxUnavailable": {
              "default": "25%",
              "required": [],
              "title": "maxUnavailable",
              "type": "string"
            }
          },
          "required": [
            "maxSurge",
            "maxUnavailable"
          ],
          "title": "rollingUpdate",
          "type": "object"
        },
        "type": {
          "default": "RollingUpdate",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "rollingUpdate"
      ],
      "title": "strategy",
      "type": "object"
    },
    "taskRunners": {
      "additionalProperties": false,
      "description": "Task runners mode. Please follow the documentation for more information: https://docs.n8n.io/hosting/configuration/task-runners/",
      "properties": {
        "broker": {
          "additionalProperties": false,
          "description": "The address for the broker of the external task runner",
          "properties": {
            "address": {
              "default": "127.0.0.1",
              "description": "The address for the broker of the external task runner",
              "required": [],
              "title": "address",
              "type": "string"
            },
            "port": {
              "default": 5679,
              "description": "The port for the broker of the external task runner",
              "required": [],
              "title": "port",
              "type": "integer"
            }
          },
          "required": [
            "address",
            "port"
          ],
          "title": "broker",
          "type": "object"
        },
        "external": {
          "additionalProperties": false,
          "description": "The configuration for the external task runner",
          "properties": {
            "autoShutdownTimeout": {
              "default": 15,
              "description": "The auto shutdown timeout for the external task runner in seconds",
              "required": [],
              "title": "autoShutdownTimeout",
              "type": "integer"
            },
            "mainNodeAuthToken": {
              "default": "",
              "description": "The auth token for the main node",
              "required": [],
              "title": "mainNodeAuthToken",
              "type": "string"
            },
            "nodeOptions": {
              "description": "The node options for the external task runner",
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "nodeOptions",
              "type": "array"
            },
            "port": {
              "default": 5680,
              "description": "The port for the external task runner",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": false,
              "description": "The resources for the external task runner",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "description": "The limits for the external task runner",
                  "properties": {
                    "cpu": {
                      "default": "2000m",
                      "description": "The CPU limit for the external task runner",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "512Mi",
                      "description": "The memory limit for the external task runner",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [
                    "cpu",
                    "memory"
                  ],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "description": "The resources requests for the external task runner",
                  "properties": {
                    "cpu": {
                      "default": "100m",
                      "description": "The CPU request for the external task runner",
                      "required": [],
                      "title": "cpu",
                      "type": "string"
                    },
                    "memory": {
                      "default": "32Mi",
                      "description": "The memory request for the external task runner",
                      "required": [],
                      "title": "memory",
                      "type": "string"
                    }
                  },
                  "required": [
                    "cpu",
                    "memory"
                  ],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [
                "requests",
                "limits"
              ],
              "title": "resources",
              "type": "object"
            },
            "workerNodeAuthToken": {
              "default": "",
              "description": "The auth token for the worker node",
              "required": [],
              "title": "workerNodeAuthToken",
              "type": "string"
            }
          },
          "required": [
            "mainNodeAuthToken",
            "workerNodeAuthToken",
            "autoShutdownTimeout",
            "port",
            "nodeOptions",
            "resources"
          ],
          "title": "external",
          "type": "object"
        },
        "maxConcurrency": {
          "default": 5,
          "description": "The maximum concurrency for the task",
          "required": [],
          "title": "maxConcurrency",
          "type": "integer"
        },
        "mode": {
          "default": "internal",
          "description": "Use `internal` to use internal task runner, or use `external` to have external sidecar task runner. For more information please follow the documentation: https://docs.n8n.io/hosting/configuration/task-runners/#task-runner-modes",
          "required": [],
          "title": "mode",
          "type": "string"
        },
        "taskHeartbeatInterval": {
          "default": 30,
          "description": "The heartbeat interval for the task in seconds",
          "required": [],
          "title": "taskHeartbeatInterval",
          "type": "integer"
        },
        "taskTimeout": {
          "default": 60,
          "description": "The timeout for the task in seconds",
          "required": [],
          "title": "taskTimeout",
          "type": "integer"
        }
      },
      "required": [
        "mode",
        "taskTimeout",
        "taskHeartbeatInterval",
        "maxConcurrency",
        "broker",
        "external"
      ],
      "title": "taskRunners",
      "type": "object"
    },
    "timezone": {
      "default": "Europe/Berlin",
      "description": "For instance, the Schedule node uses it to know at what time the workflow should start. Find you timezone from here: https://momentjs.com/timezone/",
      "required": [],
      "title": "timezone",
      "type": "string"
    },
    "tolerations": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    },
    "valkey": {
      "description": "Valkey is an open source (BSD) high-performance key/value datastore that supports a variety workloads such as caching, message queues, and can act as a primary database.",
      "properties": {
        "apiVersions": {
          "description": "#\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "apiVersions",
          "type": "array"
        },
        "architecture": {
          "default": "replication",
          "description": "#\n#",
          "required": [],
          "title": "architecture",
          "type": "string"
        },
        "auth": {
          "additionalProperties": false,
          "description": "# Valkey Authentication parameters\n# ref: https://github.com/bitnami/containers/tree/main/bitnami/valkey#setting-the-server-password-on-first-run\n#",
          "properties": {
            "enabled": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "existingSecret": {
              "default": "",
              "description": "#\n# NOTE: When it's set, the previous `auth.password` parameter is ignored\n#",
              "required": [],
              "title": "existingSecret",
              "type": "string"
            },
            "existingSecretPasswordKey": {
              "default": "",
              "description": "#\n# NOTE: ignored unless `auth.existingSecret` parameter is set\n#",
              "required": [],
              "title": "existingSecretPasswordKey",
              "type": "string"
            },
            "password": {
              "default": "",
              "description": "#\n# Defaults to a random 10-character alphanumeric string if not set\n#",
              "required": [],
              "title": "password",
              "type": "string"
            },
            "sentinel": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "sentinel",
              "type": "boolean"
            },
            "usePasswordFileFromSecret": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "usePasswordFileFromSecret",
              "type": "boolean"
            },
            "usePasswordFiles": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "usePasswordFiles",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "clusterDomain": {
          "default": "cluster.local",
          "description": "#\n#",
          "required": [],
          "title": "clusterDomain",
          "type": "string"
        },
        "common": {
          "description": "A Library Helm Chart for grouping common logic between bitnami charts. This chart is not deployable by itself.",
          "properties": {
            "exampleValue": {
              "default": "common-chart",
              "description": "# bitnami/common\n# It is required by CI/CD tools and processes.\n#\n#",
              "required": [],
              "title": "exampleValue",
              "type": "string"
            },
            "global": {
              "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
              "required": [],
              "title": "global",
              "type": "object"
            }
          },
          "required": [],
          "title": "common",
          "type": "object"
        },
        "commonAnnotations": {
          "additionalProperties": false,
          "description": "#\n#",
          "required": [],
          "title": "commonAnnotations",
          "type": "object"
        },
        "commonConfiguration": {
          "default": "# Enable AOF https://valkey.io/docs/topics/persistence.html\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"",
          "description": "#\n# ref: https://valkey.io/topics/valkey-conf/\n#",
          "required": [],
          "title": "commonConfiguration",
          "type": "string"
        },
        "commonLabels": {
          "additionalProperties": false,
          "description": "#\n#",
          "required": [],
          "title": "commonLabels",
          "type": "object"
        },
        "diagnosticMode": {
          "additionalProperties": false,
          "description": "# Enable diagnostic mode in the deployment\n#",
          "properties": {
            "args": {
              "description": "#\n#",
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "args",
              "type": "array"
            },
            "command": {
              "description": "#\n#",
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "command",
              "type": "array"
            },
            "enabled": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "diagnosticMode",
          "type": "object"
        },
        "enabled": {
          "description": "Conditional property used in parent chart",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingConfigmap": {
          "default": "",
          "description": "#\n#",
          "required": [],
          "title": "existingConfigmap",
          "type": "string"
        },
        "extraDeploy": {
          "description": "#\n#",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraDeploy",
          "type": "array"
        },
        "fullnameOverride": {
          "default": "",
          "description": "#\n#",
          "required": [],
          "title": "fullnameOverride",
          "type": "string"
        },
        "global": {
          "additionalProperties": false,
          "description": "#\n#\n#\n#\n#\n#",
          "properties": {
            "compatibility": {
              "additionalProperties": false,
              "description": "# Compatibility adaptations for Kubernetes platforms\n#",
              "properties": {
                "openshift": {
                  "additionalProperties": false,
                  "description": "# Compatibility adaptations for Openshift\n#",
                  "properties": {
                    "adaptSecurityContext": {
                      "default": "auto",
                      "description": "#\n#",
                      "required": [],
                      "title": "adaptSecurityContext",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "openshift",
                  "type": "object"
                }
              },
              "required": [],
              "title": "compatibility",
              "type": "object"
            },
            "defaultStorageClass": {
              "default": "",
              "required": [],
              "title": "defaultStorageClass",
              "type": "string"
            },
            "imagePullSecrets": {
              "description": "# E.g.\n# imagePullSecrets:\n#   - myRegistryKeySecretName\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "imagePullSecrets",
              "type": "array"
            },
            "imageRegistry": {
              "default": "",
              "required": [],
              "title": "imageRegistry",
              "type": "string"
            },
            "security": {
              "additionalProperties": false,
              "description": "# Security parameters\n#",
              "properties": {
                "allowInsecureImages": {
                  "default": false,
                  "description": "#",
                  "required": [],
                  "title": "allowInsecureImages",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "security",
              "type": "object"
            },
            "storageClass": {
              "default": "",
              "required": [],
              "title": "storageClass",
              "type": "string"
            },
            "valkey": {
              "additionalProperties": false,
              "properties": {
                "password": {
                  "default": "",
                  "required": [],
                  "title": "password",
                  "type": "string"
                }
              },
              "required": [],
              "title": "valkey",
              "type": "object"
            }
          },
          "required": [],
          "title": "global",
          "type": "object"
        },
        "image": {
          "additionalProperties": false,
          "description": "# Bitnami Valkey image\n# ref: https://hub.docker.com/r/bitnami/valkey/tags/\n#\n#\n#\n#\n#\n#\n#\n#",
          "properties": {
            "debug": {
              "default": false,
              "description": "# Enable debug mode\n#",
              "required": [],
              "title": "debug",
              "type": "boolean"
            },
            "digest": {
              "default": "",
              "required": [],
              "title": "digest",
              "type": "string"
            },
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "# Specify a imagePullPolicy\n# ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images\n#",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "pullSecrets": {
              "description": "# Optionally specify an array of imagePullSecrets.\n# Secrets must be manually created in the namespace.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n# e.g:\n# pullSecrets:\n#   - myRegistryKeySecretName\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "docker.io",
              "required": [],
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "bitnami/valkey",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "8.0.2-debian-12-r6",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "kubeVersion": {
          "default": "",
          "description": "#\n#",
          "required": [],
          "title": "kubeVersion",
          "type": "string"
        },
        "kubectl": {
          "additionalProperties": false,
          "description": "# Kubectl InitContainer\n# used by Sentinel to update the isPrimary label on the Valkey(TM) pods\n#",
          "properties": {
            "command": {
              "description": "#\n#",
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "command",
              "type": "array"
            },
            "containerSecurityContext": {
              "additionalProperties": false,
              "description": "# Configure Container Security Context\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": false,
                  "properties": {
                    "drop": {
                      "items": {
                        "anyOf": [
                          {
                            "required": [],
                            "type": "string"
                          }
                        ],
                        "required": []
                      },
                      "required": [],
                      "title": "drop",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                  "default": true,
                  "required": [],
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                },
                "runAsGroup": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seLinuxOptions": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "seLinuxOptions",
                  "type": "object"
                },
                "seccompProfile": {
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "containerSecurityContext",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "# Bitnami Kubectl image version\n# ref: https://hub.docker.com/r/bitnami/kubectl/tags/\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "digest": {
                  "default": "",
                  "required": [],
                  "title": "digest",
                  "type": "string"
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "description": "# Specify a imagePullPolicy\n# ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images\n#",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "pullSecrets": {
                  "description": "# Optionally specify an array of imagePullSecrets.\n# Secrets must be manually created in the namespace.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n# e.g:\n# pullSecrets:\n#   - myRegistryKeySecretName\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "pullSecrets",
                  "type": "array"
                },
                "registry": {
                  "default": "docker.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "bitnami/kubectl",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "1.32.3-debian-12-r1",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "resources": {
              "additionalProperties": false,
              "description": "# Bitnami Kubectl resource requests and limits\n# ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n#\n#\n#",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "limits",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [],
          "title": "kubectl",
          "type": "object"
        },
        "metrics": {
          "additionalProperties": false,
          "description": "#\n#",
          "properties": {
            "command": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "command",
              "type": "array"
            },
            "containerPorts": {
              "additionalProperties": false,
              "description": "#\n#",
              "properties": {
                "http": {
                  "default": 9121,
                  "required": [],
                  "title": "http",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "containerPorts",
              "type": "object"
            },
            "containerSecurityContext": {
              "additionalProperties": false,
              "description": "# Configure Container Security Context\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": false,
                  "properties": {
                    "drop": {
                      "items": {
                        "anyOf": [
                          {
                            "required": [],
                            "type": "string"
                          }
                        ],
                        "required": []
                      },
                      "required": [],
                      "title": "drop",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                  "default": true,
                  "required": [],
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                },
                "runAsGroup": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seLinuxOptions": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "seLinuxOptions",
                  "type": "object"
                },
                "seccompProfile": {
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "containerSecurityContext",
              "type": "object"
            },
            "customLivenessProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customLivenessProbe",
              "type": "object"
            },
            "customReadinessProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customReadinessProbe",
              "type": "object"
            },
            "customStartupProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customStartupProbe",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "extraArgs": {
              "additionalProperties": false,
              "description": "#\n# e.g.:\n# extraArgs:\n#   check-keys: myKey,myOtherKey\n#",
              "required": [],
              "title": "extraArgs",
              "type": "object"
            },
            "extraEnvVars": {
              "description": "#\n# e.g:\n# extraEnvVars:\n#   - name: FOO\n#     value: \"bar\"\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEnvVars",
              "type": "array"
            },
            "extraVolumeMounts": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "extraVolumes": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumes",
              "type": "array"
            },
            "image": {
              "additionalProperties": false,
              "description": "# Bitnami Valkey Exporter image\n# ref: https://hub.docker.com/r/bitnami/valkey-exporter/tags/\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "digest": {
                  "default": "",
                  "required": [],
                  "title": "digest",
                  "type": "string"
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "pullSecrets": {
                  "description": "# Optionally specify an array of imagePullSecrets.\n# Secrets must be manually created in the namespace.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n# e.g:\n# pullSecrets:\n#   - myRegistryKeySecretName\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "pullSecrets",
                  "type": "array"
                },
                "registry": {
                  "default": "docker.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "bitnami/redis-exporter",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "1.69.0-debian-12-r1",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "livenessProbe": {
              "additionalProperties": false,
              "description": "#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 5,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 10,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "livenessProbe",
              "type": "object"
            },
            "podAnnotations": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n#",
              "properties": {
                "prometheus.io/port": {
                  "default": "9121",
                  "required": [],
                  "title": "prometheus.io/port",
                  "type": "string"
                },
                "prometheus.io/scrape": {
                  "default": "true",
                  "required": [],
                  "title": "prometheus.io/scrape",
                  "type": "string"
                }
              },
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "podLabels": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n#",
              "required": [],
              "title": "podLabels",
              "type": "object"
            },
            "podMonitor": {
              "additionalProperties": false,
              "description": "# Prometheus Pod Monitor\n# ref: https://github.com/coreos/prometheus-operator\n#      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#podmonitor\n#",
              "properties": {
                "additionalEndpoints": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "additionalEndpoints",
                  "type": "array"
                },
                "additionalLabels": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "additionalLabels",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "honorLabels": {
                  "default": false,
                  "description": "- targetLabel: \"app\"\n  replacement: \"valkey\"\n#\n#",
                  "required": [],
                  "title": "honorLabels",
                  "type": "boolean"
                },
                "interval": {
                  "default": "30s",
                  "description": "#\n#",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "metricRelabelings": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metricRelabelings",
                  "type": "array"
                },
                "namespace": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "namespace",
                  "type": "string"
                },
                "podTargetLabels": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "podTargetLabels",
                  "type": "array"
                },
                "port": {
                  "default": "metrics",
                  "description": "#\n#",
                  "required": [],
                  "title": "port",
                  "type": "string"
                },
                "relabelings": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "sampleLimit": {
                  "default": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "sampleLimit",
                  "type": "boolean"
                },
                "scrapeTimeout": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": "string"
                },
                "targetLimit": {
                  "default": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "targetLimit",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "podMonitor",
              "type": "object"
            },
            "prometheusRule": {
              "additionalProperties": false,
              "description": "# Custom PrometheusRule to be defined\n# ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions\n#",
              "properties": {
                "additionalLabels": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "additionalLabels",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "namespace": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "namespace",
                  "type": "string"
                },
                "rules": {
                  "description": "#\n# e.g:\n# rules:\n#   - alert: ValkeyDown\n#     expr: valkey_up{service=\"{{ template \"common.names.fullname\" . }}-metrics\"} == 0\n#     for: 2m\n#     labels:\n#       severity: error\n#     annotations:\n#       summary: Valkey instance {{ \"{{ $labels.instance }}\" }} down\n#       description: Valkey instance {{ \"{{ $labels.instance }}\" }} is down\n#    - alert: ValkeyMemoryHigh\n#      expr: \u003e\n#        valkey_memory_used_bytes{service=\"{{ template \"common.names.fullname\" . }}-metrics\"} * 100\n#        /\n#        valkey_memory_max_bytes{service=\"{{ template \"common.names.fullname\" . }}-metrics\"}\n#        \u003e 90\n#      for: 2m\n#      labels:\n#        severity: error\n#      annotations:\n#        summary: Valkey instance {{ \"{{ $labels.instance }}\" }} is using too much memory\n#        description: |\n#          Valkey instance {{ \"{{ $labels.instance }}\" }} is using {{ \"{{ $value }}\" }}% of its available memory.\n#    - alert: ValkeyKeyEviction\n#      expr: |\n#        increase(valkey_evicted_keys_total{service=\"{{ template \"common.names.fullname\" . }}-metrics\"}[5m]) \u003e 0\n#      for: 1s\n#      labels:\n#        severity: error\n#      annotations:\n#        summary: Valkey instance {{ \"{{ $labels.instance }}\" }} has evicted keys\n#        description: |\n#          Valkey instance {{ \"{{ $labels.instance }}\" }} has evicted {{ \"{{ $value }}\" }} keys in the last 5 minutes.\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "rules",
                  "type": "array"
                }
              },
              "required": [],
              "title": "prometheusRule",
              "type": "object"
            },
            "readinessProbe": {
              "additionalProperties": false,
              "description": "#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 3,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 5,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 10,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 1,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "readinessProbe",
              "type": "object"
            },
            "resources": {
              "additionalProperties": false,
              "description": "#\n# Example:\n# resources:\n#   requests:\n#     cpu: 2\n#     memory: 512Mi\n#   limits:\n#     cpu: 3\n#     memory: 1024Mi\n#",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "resourcesPreset": {
              "default": "nano",
              "description": "# Valkey exporter resource requests and limits\n# ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n#\n# More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n#",
              "required": [],
              "title": "resourcesPreset",
              "type": "string"
            },
            "service": {
              "additionalProperties": false,
              "description": "# Valkey exporter service parameters\n#",
              "properties": {
                "annotations": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "clusterIP": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "clusterIP",
                  "type": "string"
                },
                "enabled": {
                  "default": true,
                  "description": "#\n#",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "externalTrafficPolicy": {
                  "default": "Cluster",
                  "description": "#\n# ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n#",
                  "required": [],
                  "title": "externalTrafficPolicy",
                  "type": "string"
                },
                "extraPorts": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraPorts",
                  "type": "array"
                },
                "loadBalancerClass": {
                  "default": "",
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer\n#",
                  "required": [],
                  "title": "loadBalancerClass",
                  "type": "string"
                },
                "loadBalancerIP": {
                  "default": "",
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n#",
                  "required": [],
                  "title": "loadBalancerIP",
                  "type": "string"
                },
                "loadBalancerSourceRanges": {
                  "description": "#\n# https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n# e.g.\n# loadBalancerSourceRanges:\n#   - 10.10.10.0/24\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "loadBalancerSourceRanges",
                  "type": "array"
                },
                "ports": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "properties": {
                    "http": {
                      "default": 9121,
                      "required": [],
                      "title": "http",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "ports",
                  "type": "object"
                },
                "type": {
                  "default": "ClusterIP",
                  "description": "#\n#",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            },
            "serviceMonitor": {
              "additionalProperties": false,
              "description": "# Prometheus Service Monitor\n# ref: https://github.com/coreos/prometheus-operator\n#      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n#",
              "properties": {
                "additionalEndpoints": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "additionalEndpoints",
                  "type": "array"
                },
                "additionalLabels": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "additionalLabels",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "honorLabels": {
                  "default": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "honorLabels",
                  "type": "boolean"
                },
                "interval": {
                  "default": "30s",
                  "description": "#\n#",
                  "required": [],
                  "title": "interval",
                  "type": "string"
                },
                "metricRelabelings": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "metricRelabelings",
                  "type": "array"
                },
                "namespace": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "namespace",
                  "type": "string"
                },
                "podTargetLabels": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "podTargetLabels",
                  "type": "array"
                },
                "port": {
                  "default": "http-metrics",
                  "description": "#\n#",
                  "required": [],
                  "title": "port",
                  "type": "string"
                },
                "relabelings": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "relabelings",
                  "type": "array"
                },
                "sampleLimit": {
                  "default": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "sampleLimit",
                  "type": "boolean"
                },
                "scrapeTimeout": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "scrapeTimeout",
                  "type": "string"
                },
                "targetLimit": {
                  "default": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "targetLimit",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "serviceMonitor",
              "type": "object"
            },
            "startupProbe": {
              "additionalProperties": false,
              "description": "# Configure extra options for Valkey containers' liveness, readiness \u0026 startup probes\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 5,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 10,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "startupProbe",
              "type": "object"
            },
            "valkeyTargetHost": {
              "default": "localhost",
              "description": "#\n# Useful for certificate CN/SAN matching\n#",
              "required": [],
              "title": "valkeyTargetHost",
              "type": "string"
            }
          },
          "required": [],
          "title": "metrics",
          "type": "object"
        },
        "nameOverride": {
          "default": "",
          "description": "#\n#",
          "required": [],
          "title": "nameOverride",
          "type": "string"
        },
        "nameResolutionThreshold": {
          "default": 5,
          "description": "#\n#",
          "required": [],
          "title": "nameResolutionThreshold",
          "type": "integer"
        },
        "nameResolutionTimeout": {
          "default": 5,
          "description": "#\n#",
          "required": [],
          "title": "nameResolutionTimeout",
          "type": "integer"
        },
        "namespaceOverride": {
          "default": "",
          "description": "#\n#",
          "required": [],
          "title": "namespaceOverride",
          "type": "string"
        },
        "networkPolicy": {
          "additionalProperties": false,
          "description": "# Network Policy configuration\n# ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/\n#",
          "properties": {
            "allowExternal": {
              "default": true,
              "description": "#\n# When set to false, only pods with the correct client label will have network access to the ports\n# Valkey is listening on. When true, Valkey will accept connections from any source\n# (with the correct destination port).\n#",
              "required": [],
              "title": "allowExternal",
              "type": "boolean"
            },
            "allowExternalEgress": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "allowExternalEgress",
              "type": "boolean"
            },
            "enabled": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "extraEgress": {
              "description": "#\n# e.g:\n# extraEgress:\n#   - ports:\n#       - port: 1234\n#     to:\n#       - podSelector:\n#           - matchLabels:\n#               - role: frontend\n#       - podSelector:\n#           - matchExpressions:\n#               - key: role\n#                 operator: In\n#                 values:\n#                   - frontend\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEgress",
              "type": "array"
            },
            "extraIngress": {
              "description": "#\n# e.g:\n# extraIngress:\n#   - ports:\n#       - port: 1234\n#     from:\n#       - podSelector:\n#           - matchLabels:\n#               - role: frontend\n#       - podSelector:\n#           - matchExpressions:\n#               - key: role\n#                 operator: In\n#                 values:\n#                   - frontend\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraIngress",
              "type": "array"
            },
            "ingressNSMatchLabels": {
              "additionalProperties": false,
              "description": "#\n#\n#",
              "required": [],
              "title": "ingressNSMatchLabels",
              "type": "object"
            },
            "ingressNSPodMatchLabels": {
              "additionalProperties": false,
              "required": [],
              "title": "ingressNSPodMatchLabels",
              "type": "object"
            },
            "metrics": {
              "additionalProperties": false,
              "properties": {
                "allowExternal": {
                  "default": true,
                  "description": "#\n# When set to false, only pods with the correct client label will have network access to the metrics port\n#",
                  "required": [],
                  "title": "allowExternal",
                  "type": "boolean"
                },
                "ingressNSMatchLabels": {
                  "additionalProperties": false,
                  "description": "#\n#\n#",
                  "required": [],
                  "title": "ingressNSMatchLabels",
                  "type": "object"
                },
                "ingressNSPodMatchLabels": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "ingressNSPodMatchLabels",
                  "type": "object"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            }
          },
          "required": [],
          "title": "networkPolicy",
          "type": "object"
        },
        "pdb": {
          "additionalProperties": false,
          "description": "# Redis\u0026reg; Pod Disruption Budget configuration\n# ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n#\n#",
          "required": [],
          "title": "pdb",
          "type": "object"
        },
        "podSecurityPolicy": {
          "additionalProperties": false,
          "description": "# PodSecurityPolicy configuration\n# ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/\n#",
          "properties": {
            "create": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "podSecurityPolicy",
          "type": "object"
        },
        "primary": {
          "additionalProperties": false,
          "description": "#\n#",
          "properties": {
            "affinity": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n# NOTE: `primary.podAffinityPreset`, `primary.podAntiAffinityPreset`, and `primary.nodeAffinityPreset` will be ignored when it's set\n#",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "args": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "args",
              "type": "array"
            },
            "automountServiceAccountToken": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "command": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "command",
              "type": "array"
            },
            "configuration": {
              "default": "",
              "description": "#\n# ref: https://valkey.io/topics/config\n#",
              "required": [],
              "title": "configuration",
              "type": "string"
            },
            "containerPorts": {
              "additionalProperties": false,
              "description": "#\n#",
              "properties": {
                "valkey": {
                  "default": 6379,
                  "required": [],
                  "title": "valkey",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "containerPorts",
              "type": "object"
            },
            "containerSecurityContext": {
              "additionalProperties": false,
              "description": "# Configure Container Security Context\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": false,
                  "properties": {
                    "drop": {
                      "items": {
                        "anyOf": [
                          {
                            "required": [],
                            "type": "string"
                          }
                        ],
                        "required": []
                      },
                      "required": [],
                      "title": "drop",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                  "default": true,
                  "required": [],
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                },
                "runAsGroup": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seLinuxOptions": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "seLinuxOptions",
                  "type": "object"
                },
                "seccompProfile": {
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "containerSecurityContext",
              "type": "object"
            },
            "customLivenessProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customLivenessProbe",
              "type": "object"
            },
            "customReadinessProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customReadinessProbe",
              "type": "object"
            },
            "customStartupProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customStartupProbe",
              "type": "object"
            },
            "disableCommands": {
              "description": "#\n# Commands will be completely disabled by renaming each to an empty string.\n# ref: https://valkey.io/topics/security#disabling-of-specific-commands\n#",
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "disableCommands",
              "type": "array"
            },
            "dnsConfig": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\n# E.g.\n# dnsConfig:\n#   options:\n#   - name: ndots\n#     value: \"4\"\n#   - name: single-request-reopen\n#",
              "required": [],
              "title": "dnsConfig",
              "type": "object"
            },
            "dnsPolicy": {
              "default": "",
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\n# E.g.\n# dnsPolicy: ClusterFirst\n#",
              "required": [],
              "title": "dnsPolicy",
              "type": "string"
            },
            "enableServiceLinks": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "enableServiceLinks",
              "type": "boolean"
            },
            "extraEnvVars": {
              "description": "#\n# e.g:\n# extraEnvVars:\n#   - name: FOO\n#     value: \"bar\"\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEnvVars",
              "type": "array"
            },
            "extraEnvVarsCM": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "extraEnvVarsCM",
              "type": "string"
            },
            "extraEnvVarsSecret": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "extraEnvVarsSecret",
              "type": "string"
            },
            "extraFlags": {
              "description": "#\n# e.g:\n# extraFlags:\n#  - \"--maxmemory-policy volatile-ttl\"\n#  - \"--repl-backlog-size 1024mb\"\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraFlags",
              "type": "array"
            },
            "extraVolumeMounts": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "extraVolumes": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumes",
              "type": "array"
            },
            "hostAliases": {
              "description": "#\n# https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "hostAliases",
              "type": "array"
            },
            "initContainers": {
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n# e.g:\n# initContainers:\n#  - name: your-image-name\n#    image: your-image\n#    imagePullPolicy: Always\n#    command: ['sh', '-c', 'echo \"hello world\"']\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "initContainers",
              "type": "array"
            },
            "kind": {
              "default": "StatefulSet",
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/\n#",
              "required": [],
              "title": "kind",
              "type": "string"
            },
            "lifecycleHooks": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "lifecycleHooks",
              "type": "object"
            },
            "livenessProbe": {
              "additionalProperties": false,
              "description": "#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 5,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 20,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "livenessProbe",
              "type": "object"
            },
            "minReadySeconds": {
              "default": 0,
              "description": "#\n#",
              "required": [],
              "title": "minReadySeconds",
              "type": "integer"
            },
            "nodeAffinityPreset": {
              "additionalProperties": false,
              "description": "# Node primary.affinity preset\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n#",
              "properties": {
                "key": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "key",
                  "type": "string"
                },
                "type": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "type",
                  "type": "string"
                },
                "values": {
                  "description": "#\n# E.g.\n# values:\n#   - e2e-az1\n#   - e2e-az2\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "values",
                  "type": "array"
                }
              },
              "required": [],
              "title": "nodeAffinityPreset",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n#",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "pdb": {
              "additionalProperties": false,
              "description": "# Pod Disruption Budget configuration\n# ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb\n#\n#\n#\n#",
              "properties": {
                "create": {
                  "default": true,
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                },
                "maxUnavailable": {
                  "default": "",
                  "required": [],
                  "title": "maxUnavailable",
                  "type": "string"
                },
                "minAvailable": {
                  "default": "",
                  "required": [],
                  "title": "minAvailable",
                  "type": "string"
                }
              },
              "required": [],
              "title": "pdb",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "# Persistence parameters\n# ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/\n#",
              "properties": {
                "accessModes": {
                  "description": "#\n#",
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "dataSource": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "dataSource",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "description": "#\n#",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "#\n# NOTE: requires primary.persistence.enabled: true\n#",
                  "required": [],
                  "title": "existingClaim",
                  "type": "string"
                },
                "labels": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "medium": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "medium",
                  "type": "string"
                },
                "path": {
                  "default": "/data",
                  "description": "#\n# NOTE: Useful when using different Valkey images\n#",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "selector": {
                  "additionalProperties": false,
                  "description": "#\n# e.g:\n# selector:\n#   matchLabels:\n#     app: my-app\n#",
                  "required": [],
                  "title": "selector",
                  "type": "object"
                },
                "size": {
                  "default": "8Gi",
                  "description": "#\n#",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "sizeLimit": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "sizeLimit",
                  "type": "string"
                },
                "storageClass": {
                  "default": "",
                  "description": "#\n# If defined, storageClassName: \u003cstorageClass\u003e\n# If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n# If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner\n#",
                  "required": [],
                  "title": "storageClass",
                  "type": "string"
                },
                "subPath": {
                  "default": "",
                  "description": "#\n# NOTE: Useful in dev environments\n#",
                  "required": [],
                  "title": "subPath",
                  "type": "string"
                },
                "subPathExpr": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "subPathExpr",
                  "type": "string"
                }
              },
              "required": [],
              "title": "persistence",
              "type": "object"
            },
            "persistentVolumeClaimRetentionPolicy": {
              "additionalProperties": false,
              "description": "# persistentVolumeClaimRetentionPolicy\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "whenDeleted": {
                  "default": "Retain",
                  "required": [],
                  "title": "whenDeleted",
                  "type": "string"
                },
                "whenScaled": {
                  "default": "Retain",
                  "required": [],
                  "title": "whenScaled",
                  "type": "string"
                }
              },
              "required": [],
              "title": "persistentVolumeClaimRetentionPolicy",
              "type": "object"
            },
            "podAffinityPreset": {
              "default": "",
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n#",
              "required": [],
              "title": "podAffinityPreset",
              "type": "string"
            },
            "podAnnotations": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n#",
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "podAntiAffinityPreset": {
              "default": "soft",
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n#",
              "required": [],
              "title": "podAntiAffinityPreset",
              "type": "string"
            },
            "podLabels": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n#",
              "required": [],
              "title": "podLabels",
              "type": "object"
            },
            "podSecurityContext": {
              "additionalProperties": false,
              "description": "# Configure Pods Security Context\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "fsGroup": {
                  "default": 1001,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "fsGroupChangePolicy": {
                  "default": "Always",
                  "required": [],
                  "title": "fsGroupChangePolicy",
                  "type": "string"
                },
                "supplementalGroups": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "supplementalGroups",
                  "type": "array"
                },
                "sysctls": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "sysctls",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podSecurityContext",
              "type": "object"
            },
            "preExecCmds": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "preExecCmds",
              "type": "array"
            },
            "priorityClassName": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "readinessProbe": {
              "additionalProperties": false,
              "description": "#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 5,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 20,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 1,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "readinessProbe",
              "type": "object"
            },
            "replicaCount": {
              "default": 1,
              "description": "#\n#",
              "required": [],
              "title": "replicaCount",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": false,
              "description": "#\n# Example:\n# resources:\n#   requests:\n#     cpu: 2\n#     memory: 512Mi\n#   limits:\n#     cpu: 3\n#     memory: 1024Mi\n#",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "resourcesPreset": {
              "default": "nano",
              "description": "# Valkey primary resource requests and limits\n# ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n#\n# More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n#",
              "required": [],
              "title": "resourcesPreset",
              "type": "string"
            },
            "schedulerName": {
              "default": "",
              "description": "#\n# ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n#",
              "required": [],
              "title": "schedulerName",
              "type": "string"
            },
            "service": {
              "additionalProperties": false,
              "description": "# Valkey primary service parameters\n#",
              "properties": {
                "annotations": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "clusterIP": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "clusterIP",
                  "type": "string"
                },
                "externalIPs": {
                  "description": "#\n# https://kubernetes.io/docs/concepts/services-networking/service/#external-ips\n# e.g.\n# externalIPs:\n#   - 10.10.10.1\n#   - 201.22.30.1\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "externalIPs",
                  "type": "array"
                },
                "externalTrafficPolicy": {
                  "default": "Cluster",
                  "description": "#\n# ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n#",
                  "required": [],
                  "title": "externalTrafficPolicy",
                  "type": "string"
                },
                "extraPorts": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraPorts",
                  "type": "array"
                },
                "internalTrafficPolicy": {
                  "default": "Cluster",
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service-traffic-policy/\n#",
                  "required": [],
                  "title": "internalTrafficPolicy",
                  "type": "string"
                },
                "loadBalancerClass": {
                  "default": "",
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer\n#",
                  "required": [],
                  "title": "loadBalancerClass",
                  "type": "string"
                },
                "loadBalancerIP": {
                  "default": "",
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n#",
                  "required": [],
                  "title": "loadBalancerIP",
                  "type": "string"
                },
                "loadBalancerSourceRanges": {
                  "description": "#\n# https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n# e.g.\n# loadBalancerSourceRanges:\n#   - 10.10.10.0/24\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "loadBalancerSourceRanges",
                  "type": "array"
                },
                "nodePorts": {
                  "additionalProperties": false,
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n# NOTE: choose port between \u003c30000-32767\u003e\n#",
                  "properties": {
                    "valkey": {
                      "default": "",
                      "required": [],
                      "title": "valkey",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "nodePorts",
                  "type": "object"
                },
                "ports": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "properties": {
                    "valkey": {
                      "default": 6379,
                      "required": [],
                      "title": "valkey",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "ports",
                  "type": "object"
                },
                "sessionAffinity": {
                  "default": "None",
                  "description": "#\n# If \"ClientIP\", consecutive client requests will be directed to the same Pod\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n#",
                  "required": [],
                  "title": "sessionAffinity",
                  "type": "string"
                },
                "sessionAffinityConfig": {
                  "additionalProperties": false,
                  "description": "#\n# sessionAffinityConfig:\n#   clientIP:\n#     timeoutSeconds: 300\n#",
                  "required": [],
                  "title": "sessionAffinityConfig",
                  "type": "object"
                },
                "type": {
                  "default": "ClusterIP",
                  "description": "#\n#",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            },
            "serviceAccount": {
              "additionalProperties": false,
              "description": "# ServiceAccount configuration\n#",
              "properties": {
                "annotations": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "automountServiceAccountToken": {
                  "default": false,
                  "description": "#\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server\n#",
                  "required": [],
                  "title": "automountServiceAccountToken",
                  "type": "boolean"
                },
                "create": {
                  "default": true,
                  "description": "#\n#",
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                },
                "name": {
                  "default": "",
                  "description": "#\n# If not set and create is true, a name is generated using the common.names.fullname template\n#",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "serviceAccount",
              "type": "object"
            },
            "shareProcessNamespace": {
              "default": false,
              "description": "#\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/\n#",
              "required": [],
              "title": "shareProcessNamespace",
              "type": "boolean"
            },
            "sidecars": {
              "description": "#\n# e.g:\n# sidecars:\n#   - name: your-image-name\n#     image: your-image\n#     imagePullPolicy: Always\n#     ports:\n#       - name: portname\n#         containerPort: 1234\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "sidecars",
              "type": "array"
            },
            "startupProbe": {
              "additionalProperties": false,
              "description": "# Configure extra options for Valkey containers' liveness and readiness probes\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 5,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 20,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "startupProbe",
              "type": "object"
            },
            "terminationGracePeriodSeconds": {
              "default": 30,
              "description": "#\n#",
              "required": [],
              "title": "terminationGracePeriodSeconds",
              "type": "integer"
            },
            "tolerations": {
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\n# E.g.\n# topologySpreadConstraints:\n#   - maxSkew: 1\n#     topologyKey: node\n#     whenUnsatisfiable: DoNotSchedule\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "topologySpreadConstraints",
              "type": "array"
            },
            "updateStrategy": {
              "additionalProperties": false,
              "description": "#\n#\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n#",
              "properties": {
                "type": {
                  "default": "RollingUpdate",
                  "description": "# StrategyType\n# Can be set to RollingUpdate, OnDelete (statefulset), Recreate (deployment)\n#",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "updateStrategy",
              "type": "object"
            }
          },
          "required": [],
          "title": "primary",
          "type": "object"
        },
        "rbac": {
          "additionalProperties": false,
          "description": "# RBAC configuration\n#",
          "properties": {
            "create": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "rules": {
              "description": "#\n# e.g:\n# rules:\n#   - apiGroups:\n#       - \"\"\n#     resources:\n#       - pods\n#     verbs:\n#       - get\n#       - list\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "rules",
              "type": "array"
            }
          },
          "required": [],
          "title": "rbac",
          "type": "object"
        },
        "replica": {
          "additionalProperties": false,
          "description": "#\n#",
          "properties": {
            "affinity": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n# NOTE: `replica.podAffinityPreset`, `replica.podAntiAffinityPreset`, and `replica.nodeAffinityPreset` will be ignored when it's set\n#",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "args": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "args",
              "type": "array"
            },
            "automountServiceAccountToken": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "autoscaling": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/\n#",
              "properties": {
                "hpa": {
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "default": false,
                      "description": "#\n#",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "maxReplicas": {
                      "default": "",
                      "description": "#\n#",
                      "required": [],
                      "title": "maxReplicas",
                      "type": "string"
                    },
                    "minReplicas": {
                      "default": "",
                      "description": "#\n#",
                      "required": [],
                      "title": "minReplicas",
                      "type": "string"
                    },
                    "targetCPU": {
                      "default": "",
                      "description": "#\n#",
                      "required": [],
                      "title": "targetCPU",
                      "type": "string"
                    },
                    "targetMemory": {
                      "default": "",
                      "description": "#\n#",
                      "required": [],
                      "title": "targetMemory",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "hpa",
                  "type": "object"
                },
                "vpa": {
                  "additionalProperties": false,
                  "properties": {
                    "annotations": {
                      "additionalProperties": false,
                      "description": "#\n#",
                      "required": [],
                      "title": "annotations",
                      "type": "object"
                    },
                    "controlledResources": {
                      "description": "#\n#",
                      "items": {
                        "required": []
                      },
                      "required": [],
                      "title": "controlledResources",
                      "type": "array"
                    },
                    "enabled": {
                      "default": false,
                      "description": "#\n#",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "maxAllowed": {
                      "additionalProperties": false,
                      "description": "#\n# cpu: 200m\n# memory: 100Mi",
                      "required": [],
                      "title": "maxAllowed",
                      "type": "object"
                    },
                    "minAllowed": {
                      "additionalProperties": false,
                      "description": "#\n# cpu: 200m\n# memory: 100Mi",
                      "required": [],
                      "title": "minAllowed",
                      "type": "object"
                    },
                    "updatePolicy": {
                      "additionalProperties": false,
                      "description": "#\n#",
                      "properties": {
                        "updateMode": {
                          "default": "Auto",
                          "description": "#\n# Possible values are \"Off\", \"Initial\", \"Recreate\", and \"Auto\".\n#",
                          "required": [],
                          "title": "updateMode",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "updatePolicy",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "vpa",
                  "type": "object"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "command": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "command",
              "type": "array"
            },
            "configuration": {
              "default": "",
              "description": "#\n# ref: https://valkey.io/topics/config\n#",
              "required": [],
              "title": "configuration",
              "type": "string"
            },
            "containerPorts": {
              "additionalProperties": false,
              "description": "#\n#",
              "properties": {
                "valkey": {
                  "default": 6379,
                  "required": [],
                  "title": "valkey",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "containerPorts",
              "type": "object"
            },
            "containerSecurityContext": {
              "additionalProperties": false,
              "description": "# Configure Container Security Context\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": false,
                  "properties": {
                    "drop": {
                      "items": {
                        "anyOf": [
                          {
                            "required": [],
                            "type": "string"
                          }
                        ],
                        "required": []
                      },
                      "required": [],
                      "title": "drop",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                  "default": true,
                  "required": [],
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                },
                "runAsGroup": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seLinuxOptions": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "seLinuxOptions",
                  "type": "object"
                },
                "seccompProfile": {
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "containerSecurityContext",
              "type": "object"
            },
            "customLivenessProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customLivenessProbe",
              "type": "object"
            },
            "customReadinessProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customReadinessProbe",
              "type": "object"
            },
            "customStartupProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customStartupProbe",
              "type": "object"
            },
            "disableCommands": {
              "description": "#\n# Commands will be completely disabled by renaming each to an empty string.\n# ref: https://valkey.io/topics/security#disabling-of-specific-commands\n#",
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "disableCommands",
              "type": "array"
            },
            "dnsConfig": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\n# E.g.\n# dnsConfig:\n#   options:\n#   - name: ndots\n#     value: \"4\"\n#   - name: single-request-reopen\n#",
              "required": [],
              "title": "dnsConfig",
              "type": "object"
            },
            "dnsPolicy": {
              "default": "",
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\n# E.g.\n# dnsPolicy: ClusterFirst\n#",
              "required": [],
              "title": "dnsPolicy",
              "type": "string"
            },
            "enableServiceLinks": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "enableServiceLinks",
              "type": "boolean"
            },
            "externalPrimary": {
              "additionalProperties": false,
              "description": "#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "host": {
                  "default": "",
                  "required": [],
                  "title": "host",
                  "type": "string"
                },
                "port": {
                  "default": 6379,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "externalPrimary",
              "type": "object"
            },
            "extraEnvVars": {
              "description": "#\n# e.g:\n# extraEnvVars:\n#   - name: FOO\n#     value: \"bar\"\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEnvVars",
              "type": "array"
            },
            "extraEnvVarsCM": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "extraEnvVarsCM",
              "type": "string"
            },
            "extraEnvVarsSecret": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "extraEnvVarsSecret",
              "type": "string"
            },
            "extraFlags": {
              "description": "#\n# e.g:\n# extraFlags:\n#  - \"--maxmemory-policy volatile-ttl\"\n#  - \"--repl-backlog-size 1024mb\"\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraFlags",
              "type": "array"
            },
            "extraVolumeMounts": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "extraVolumes": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumes",
              "type": "array"
            },
            "hostAliases": {
              "description": "#\n# https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "hostAliases",
              "type": "array"
            },
            "initContainers": {
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n# e.g:\n# initContainers:\n#  - name: your-image-name\n#    image: your-image\n#    imagePullPolicy: Always\n#    command: ['sh', '-c', 'echo \"hello world\"']\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "initContainers",
              "type": "array"
            },
            "kind": {
              "default": "StatefulSet",
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/\n#",
              "required": [],
              "title": "kind",
              "type": "string"
            },
            "lifecycleHooks": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "lifecycleHooks",
              "type": "object"
            },
            "livenessProbe": {
              "additionalProperties": false,
              "description": "#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 5,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 20,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "livenessProbe",
              "type": "object"
            },
            "minReadySeconds": {
              "default": 0,
              "description": "#\n#",
              "required": [],
              "title": "minReadySeconds",
              "type": "integer"
            },
            "nodeAffinityPreset": {
              "additionalProperties": false,
              "description": "# Node affinity preset\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n#",
              "properties": {
                "key": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "key",
                  "type": "string"
                },
                "type": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "type",
                  "type": "string"
                },
                "values": {
                  "description": "#\n# E.g.\n# values:\n#   - e2e-az1\n#   - e2e-az2\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "values",
                  "type": "array"
                }
              },
              "required": [],
              "title": "nodeAffinityPreset",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/\n#",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "pdb": {
              "additionalProperties": false,
              "description": "# Pod Disruption Budget configuration\n# ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb\n#\n#\n#\n#",
              "properties": {
                "create": {
                  "default": true,
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                },
                "maxUnavailable": {
                  "default": "",
                  "required": [],
                  "title": "maxUnavailable",
                  "type": "string"
                },
                "minAvailable": {
                  "default": "",
                  "required": [],
                  "title": "minAvailable",
                  "type": "string"
                }
              },
              "required": [],
              "title": "pdb",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "# Persistence Parameters\n# ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/\n#",
              "properties": {
                "accessModes": {
                  "description": "#\n#",
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "dataSource": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "dataSource",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "description": "#\n#",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "#\n# NOTE: requires replica.persistence.enabled: true\n#",
                  "required": [],
                  "title": "existingClaim",
                  "type": "string"
                },
                "labels": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "medium": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "medium",
                  "type": "string"
                },
                "path": {
                  "default": "/data",
                  "description": "#\n# NOTE: Useful when using different Valkey images\n#",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "selector": {
                  "additionalProperties": false,
                  "description": "#\n# e.g:\n# selector:\n#   matchLabels:\n#     app: my-app\n#",
                  "required": [],
                  "title": "selector",
                  "type": "object"
                },
                "size": {
                  "default": "8Gi",
                  "description": "#\n#",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "sizeLimit": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "sizeLimit",
                  "type": "string"
                },
                "storageClass": {
                  "default": "",
                  "description": "#\n# If defined, storageClassName: \u003cstorageClass\u003e\n# If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n# If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner\n#",
                  "required": [],
                  "title": "storageClass",
                  "type": "string"
                },
                "subPath": {
                  "default": "",
                  "description": "#\n# NOTE: Useful in dev environments\n#",
                  "required": [],
                  "title": "subPath",
                  "type": "string"
                },
                "subPathExpr": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "subPathExpr",
                  "type": "string"
                }
              },
              "required": [],
              "title": "persistence",
              "type": "object"
            },
            "persistentVolumeClaimRetentionPolicy": {
              "additionalProperties": false,
              "description": "# persistentVolumeClaimRetentionPolicy\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "whenDeleted": {
                  "default": "Retain",
                  "required": [],
                  "title": "whenDeleted",
                  "type": "string"
                },
                "whenScaled": {
                  "default": "Retain",
                  "required": [],
                  "title": "whenScaled",
                  "type": "string"
                }
              },
              "required": [],
              "title": "persistentVolumeClaimRetentionPolicy",
              "type": "object"
            },
            "podAffinityPreset": {
              "default": "",
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n#",
              "required": [],
              "title": "podAffinityPreset",
              "type": "string"
            },
            "podAnnotations": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n#",
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "podAntiAffinityPreset": {
              "default": "soft",
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n#",
              "required": [],
              "title": "podAntiAffinityPreset",
              "type": "string"
            },
            "podLabels": {
              "additionalProperties": false,
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n#",
              "required": [],
              "title": "podLabels",
              "type": "object"
            },
            "podManagementPolicy": {
              "default": "",
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies\n#",
              "required": [],
              "title": "podManagementPolicy",
              "type": "string"
            },
            "podSecurityContext": {
              "additionalProperties": false,
              "description": "# Configure Pods Security Context\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "fsGroup": {
                  "default": 1001,
                  "required": [],
                  "title": "fsGroup",
                  "type": "integer"
                },
                "fsGroupChangePolicy": {
                  "default": "Always",
                  "required": [],
                  "title": "fsGroupChangePolicy",
                  "type": "string"
                },
                "supplementalGroups": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "supplementalGroups",
                  "type": "array"
                },
                "sysctls": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "sysctls",
                  "type": "array"
                }
              },
              "required": [],
              "title": "podSecurityContext",
              "type": "object"
            },
            "preExecCmds": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "preExecCmds",
              "type": "array"
            },
            "priorityClassName": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "priorityClassName",
              "type": "string"
            },
            "readinessProbe": {
              "additionalProperties": false,
              "description": "#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 5,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 20,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 1,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "readinessProbe",
              "type": "object"
            },
            "replicaCount": {
              "default": 3,
              "description": "#\n#",
              "required": [],
              "title": "replicaCount",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": false,
              "description": "#\n# Example:\n# resources:\n#   requests:\n#     cpu: 2\n#     memory: 512Mi\n#   limits:\n#     cpu: 3\n#     memory: 1024Mi\n#",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "resourcesPreset": {
              "default": "nano",
              "description": "# Valkey replicas resource requests and limits\n# ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n#\n# More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n#",
              "required": [],
              "title": "resourcesPreset",
              "type": "string"
            },
            "schedulerName": {
              "default": "",
              "description": "#\n# ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n#",
              "required": [],
              "title": "schedulerName",
              "type": "string"
            },
            "service": {
              "additionalProperties": false,
              "description": "# Valkey replicas service parameters\n#",
              "properties": {
                "annotations": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "clusterIP": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "clusterIP",
                  "type": "string"
                },
                "externalTrafficPolicy": {
                  "default": "Cluster",
                  "description": "#\n# ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n#",
                  "required": [],
                  "title": "externalTrafficPolicy",
                  "type": "string"
                },
                "extraPorts": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraPorts",
                  "type": "array"
                },
                "internalTrafficPolicy": {
                  "default": "Cluster",
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service-traffic-policy/\n#",
                  "required": [],
                  "title": "internalTrafficPolicy",
                  "type": "string"
                },
                "loadBalancerClass": {
                  "default": "",
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer\n#",
                  "required": [],
                  "title": "loadBalancerClass",
                  "type": "string"
                },
                "loadBalancerIP": {
                  "default": "",
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n#",
                  "required": [],
                  "title": "loadBalancerIP",
                  "type": "string"
                },
                "loadBalancerSourceRanges": {
                  "description": "#\n# https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n# e.g.\n# loadBalancerSourceRanges:\n#   - 10.10.10.0/24\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "loadBalancerSourceRanges",
                  "type": "array"
                },
                "nodePorts": {
                  "additionalProperties": false,
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n# NOTE: choose port between \u003c30000-32767\u003e\n#",
                  "properties": {
                    "valkey": {
                      "default": "",
                      "required": [],
                      "title": "valkey",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "nodePorts",
                  "type": "object"
                },
                "ports": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "properties": {
                    "valkey": {
                      "default": 6379,
                      "required": [],
                      "title": "valkey",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "ports",
                  "type": "object"
                },
                "sessionAffinity": {
                  "default": "None",
                  "description": "#\n# If \"ClientIP\", consecutive client requests will be directed to the same Pod\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n#",
                  "required": [],
                  "title": "sessionAffinity",
                  "type": "string"
                },
                "sessionAffinityConfig": {
                  "additionalProperties": false,
                  "description": "#\n# sessionAffinityConfig:\n#   clientIP:\n#     timeoutSeconds: 300\n#",
                  "required": [],
                  "title": "sessionAffinityConfig",
                  "type": "object"
                },
                "type": {
                  "default": "ClusterIP",
                  "description": "#\n#",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            },
            "serviceAccount": {
              "additionalProperties": false,
              "description": "# ServiceAccount configuration\n#",
              "properties": {
                "annotations": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "automountServiceAccountToken": {
                  "default": false,
                  "description": "#\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server\n#",
                  "required": [],
                  "title": "automountServiceAccountToken",
                  "type": "boolean"
                },
                "create": {
                  "default": true,
                  "description": "#\n#",
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                },
                "name": {
                  "default": "",
                  "description": "#\n# If not set and create is true, a name is generated using the common.names.fullname template\n#",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "serviceAccount",
              "type": "object"
            },
            "shareProcessNamespace": {
              "default": false,
              "description": "#\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/\n#",
              "required": [],
              "title": "shareProcessNamespace",
              "type": "boolean"
            },
            "sidecars": {
              "description": "#\n# e.g:\n# sidecars:\n#   - name: your-image-name\n#     image: your-image\n#     imagePullPolicy: Always\n#     ports:\n#       - name: portname\n#         containerPort: 1234\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "sidecars",
              "type": "array"
            },
            "startupProbe": {
              "additionalProperties": false,
              "description": "# Configure extra options for Valkey containers' liveness and readiness probes\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 22,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 10,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "startupProbe",
              "type": "object"
            },
            "terminationGracePeriodSeconds": {
              "default": 30,
              "description": "#\n#",
              "required": [],
              "title": "terminationGracePeriodSeconds",
              "type": "integer"
            },
            "tolerations": {
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "#\n# ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\n# E.g.\n# topologySpreadConstraints:\n#   - maxSkew: 1\n#     topologyKey: node\n#     whenUnsatisfiable: DoNotSchedule\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "topologySpreadConstraints",
              "type": "array"
            },
            "updateStrategy": {
              "additionalProperties": false,
              "description": "#\n#\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n#",
              "properties": {
                "type": {
                  "default": "RollingUpdate",
                  "description": "# StrategyType\n# Can be set to RollingUpdate, OnDelete (statefulset), Recreate (deployment)\n#",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "updateStrategy",
              "type": "object"
            }
          },
          "required": [],
          "title": "replica",
          "type": "object"
        },
        "secretAnnotations": {
          "additionalProperties": false,
          "description": "#\n#",
          "required": [],
          "title": "secretAnnotations",
          "type": "object"
        },
        "sentinel": {
          "additionalProperties": false,
          "description": "#\n#",
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "args": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "args",
              "type": "array"
            },
            "automateClusterRecovery": {
              "default": false,
              "description": "#\n# This also prevents any new replica from starting until the last remaining replica is elected as primary to guarantee that it is the one to be elected by Sentinel, and not a newly started replica with no data.\n# NOTE: This feature requires a \"downAfterMilliseconds\" value less or equal to 2000.\n#",
              "required": [],
              "title": "automateClusterRecovery",
              "type": "boolean"
            },
            "command": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "command",
              "type": "array"
            },
            "configuration": {
              "default": "",
              "description": "#\n# ref: https://valkey.io/topics/sentinel\n#",
              "required": [],
              "title": "configuration",
              "type": "string"
            },
            "containerPorts": {
              "additionalProperties": false,
              "description": "#\n#",
              "properties": {
                "sentinel": {
                  "default": 26379,
                  "required": [],
                  "title": "sentinel",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "containerPorts",
              "type": "object"
            },
            "containerSecurityContext": {
              "additionalProperties": false,
              "description": "# Configure Container Security Context\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "required": [],
                  "title": "allowPrivilegeEscalation",
                  "type": "boolean"
                },
                "capabilities": {
                  "additionalProperties": false,
                  "properties": {
                    "drop": {
                      "items": {
                        "anyOf": [
                          {
                            "required": [],
                            "type": "string"
                          }
                        ],
                        "required": []
                      },
                      "required": [],
                      "title": "drop",
                      "type": "array"
                    }
                  },
                  "required": [],
                  "title": "capabilities",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                  "default": true,
                  "required": [],
                  "title": "readOnlyRootFilesystem",
                  "type": "boolean"
                },
                "runAsGroup": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsGroup",
                  "type": "integer"
                },
                "runAsNonRoot": {
                  "default": true,
                  "required": [],
                  "title": "runAsNonRoot",
                  "type": "boolean"
                },
                "runAsUser": {
                  "default": 1001,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seLinuxOptions": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "seLinuxOptions",
                  "type": "object"
                },
                "seccompProfile": {
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "default": "RuntimeDefault",
                      "required": [],
                      "title": "type",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "seccompProfile",
                  "type": "object"
                }
              },
              "required": [],
              "title": "containerSecurityContext",
              "type": "object"
            },
            "customLivenessProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customLivenessProbe",
              "type": "object"
            },
            "customReadinessProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customReadinessProbe",
              "type": "object"
            },
            "customStartupProbe": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "customStartupProbe",
              "type": "object"
            },
            "downAfterMilliseconds": {
              "default": 60000,
              "description": "# Sentinel timing restrictions\n#\n#\n#",
              "required": [],
              "title": "downAfterMilliseconds",
              "type": "integer"
            },
            "enableServiceLinks": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "enableServiceLinks",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "#\n# IMPORTANT: this will disable the primary and replicas services and\n# create a single Valkey service exposing both the Valkey and Sentinel ports\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "externalPrimary": {
              "additionalProperties": false,
              "description": "#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "host": {
                  "default": "",
                  "required": [],
                  "title": "host",
                  "type": "string"
                },
                "port": {
                  "default": 6379,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "externalPrimary",
              "type": "object"
            },
            "extraEnvVars": {
              "description": "#\n# e.g:\n# extraEnvVars:\n#   - name: FOO\n#     value: \"bar\"\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraEnvVars",
              "type": "array"
            },
            "extraEnvVarsCM": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "extraEnvVarsCM",
              "type": "string"
            },
            "extraEnvVarsSecret": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "extraEnvVarsSecret",
              "type": "string"
            },
            "extraVolumeMounts": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumeMounts",
              "type": "array"
            },
            "extraVolumes": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraVolumes",
              "type": "array"
            },
            "failoverTimeout": {
              "default": 180000,
              "required": [],
              "title": "failoverTimeout",
              "type": "integer"
            },
            "getPrimaryTimeout": {
              "default": 90,
              "description": "#\n#",
              "required": [],
              "title": "getPrimaryTimeout",
              "type": "integer"
            },
            "image": {
              "additionalProperties": false,
              "description": "# Bitnami Valkey Sentinel image version\n# ref: https://hub.docker.com/r/bitnami/valkey-sentinel/tags/\n#\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "debug": {
                  "default": false,
                  "description": "# Enable debug mode\n#",
                  "required": [],
                  "title": "debug",
                  "type": "boolean"
                },
                "digest": {
                  "default": "",
                  "required": [],
                  "title": "digest",
                  "type": "string"
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "description": "# Specify a imagePullPolicy\n# ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images\n#",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "pullSecrets": {
                  "description": "# Optionally specify an array of imagePullSecrets.\n# Secrets must be manually created in the namespace.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n# e.g:\n# pullSecrets:\n#   - myRegistryKeySecretName\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "pullSecrets",
                  "type": "array"
                },
                "registry": {
                  "default": "docker.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "bitnami/valkey-sentinel",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "8.0.2-debian-12-r6",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "lifecycleHooks": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "lifecycleHooks",
              "type": "object"
            },
            "livenessProbe": {
              "additionalProperties": false,
              "description": "#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 6,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 20,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 10,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "livenessProbe",
              "type": "object"
            },
            "parallelSyncs": {
              "default": 1,
              "description": "#\n#",
              "required": [],
              "title": "parallelSyncs",
              "type": "integer"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "# Persistence parameters\n# ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/\n#",
              "properties": {
                "accessModes": {
                  "description": "#\n#",
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "dataSource": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "dataSource",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "labels": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "labels",
                  "type": "object"
                },
                "medium": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "medium",
                  "type": "string"
                },
                "selector": {
                  "additionalProperties": false,
                  "description": "#\n# e.g:\n# selector:\n#   matchLabels:\n#     app: my-app\n#",
                  "required": [],
                  "title": "selector",
                  "type": "object"
                },
                "size": {
                  "default": "100Mi",
                  "description": "#\n#",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "sizeLimit": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "sizeLimit",
                  "type": "string"
                },
                "storageClass": {
                  "default": "",
                  "description": "#\n# If defined, storageClassName: \u003cstorageClass\u003e\n# If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n# If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner\n#",
                  "required": [],
                  "title": "storageClass",
                  "type": "string"
                }
              },
              "required": [],
              "title": "persistence",
              "type": "object"
            },
            "persistentVolumeClaimRetentionPolicy": {
              "additionalProperties": false,
              "description": "# persistentVolumeClaimRetentionPolicy\n# ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "whenDeleted": {
                  "default": "Retain",
                  "required": [],
                  "title": "whenDeleted",
                  "type": "string"
                },
                "whenScaled": {
                  "default": "Retain",
                  "required": [],
                  "title": "whenScaled",
                  "type": "string"
                }
              },
              "required": [],
              "title": "persistentVolumeClaimRetentionPolicy",
              "type": "object"
            },
            "preExecCmds": {
              "description": "#\n#",
              "items": {
                "required": []
              },
              "required": [],
              "title": "preExecCmds",
              "type": "array"
            },
            "primarySet": {
              "default": "myprimary",
              "description": "#\n#",
              "required": [],
              "title": "primarySet",
              "type": "string"
            },
            "quorum": {
              "default": 2,
              "description": "#\n#",
              "required": [],
              "title": "quorum",
              "type": "integer"
            },
            "readinessProbe": {
              "additionalProperties": false,
              "description": "#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 6,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 20,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 1,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "readinessProbe",
              "type": "object"
            },
            "resources": {
              "additionalProperties": false,
              "description": "#\n# Example:\n# resources:\n#   requests:\n#     cpu: 2\n#     memory: 512Mi\n#   limits:\n#     cpu: 3\n#     memory: 1024Mi\n#",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "resourcesPreset": {
              "default": "nano",
              "description": "# Valkey Sentinel resource requests and limits\n# ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n#\n# More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n#",
              "required": [],
              "title": "resourcesPreset",
              "type": "string"
            },
            "service": {
              "additionalProperties": false,
              "description": "# Valkey Sentinel service parameters\n#",
              "properties": {
                "annotations": {
                  "additionalProperties": false,
                  "description": "#\n#",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "clusterIP": {
                  "default": "",
                  "description": "#\n#",
                  "required": [],
                  "title": "clusterIP",
                  "type": "string"
                },
                "createPrimary": {
                  "default": false,
                  "description": "#\n# NOTE: rbac.create need to be set to true\n#",
                  "required": [],
                  "title": "createPrimary",
                  "type": "boolean"
                },
                "externalTrafficPolicy": {
                  "default": "Cluster",
                  "description": "#\n# ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n#",
                  "required": [],
                  "title": "externalTrafficPolicy",
                  "type": "string"
                },
                "extraPorts": {
                  "description": "#\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "extraPorts",
                  "type": "array"
                },
                "headless": {
                  "additionalProperties": false,
                  "description": "# Headless service properties\n#",
                  "properties": {
                    "annotations": {
                      "additionalProperties": false,
                      "description": "#\n#",
                      "required": [],
                      "title": "annotations",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "headless",
                  "type": "object"
                },
                "loadBalancerClass": {
                  "default": "",
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer\n#",
                  "required": [],
                  "title": "loadBalancerClass",
                  "type": "string"
                },
                "loadBalancerIP": {
                  "default": "",
                  "description": "#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n#",
                  "required": [],
                  "title": "loadBalancerIP",
                  "type": "string"
                },
                "loadBalancerSourceRanges": {
                  "description": "#\n# https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n# e.g.\n# loadBalancerSourceRanges:\n#   - 10.10.10.0/24\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "loadBalancerSourceRanges",
                  "type": "array"
                },
                "nodePorts": {
                  "additionalProperties": false,
                  "description": "#\n#\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n# NOTE: choose port between \u003c30000-32767\u003e\n# NOTE: By leaving these values blank, they will be generated by ports-configmap\n#       If setting manually, please leave at least replica.replicaCount + 1 in between sentinel.service.nodePorts.valkey and sentinel.service.nodePorts.sentinel to take into account the ports that will be created while incrementing that base port\n#",
                  "properties": {
                    "sentinel": {
                      "default": "",
                      "required": [],
                      "title": "sentinel",
                      "type": "string"
                    },
                    "valkey": {
                      "default": "",
                      "required": [],
                      "title": "valkey",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "nodePorts",
                  "type": "object"
                },
                "ports": {
                  "additionalProperties": false,
                  "description": "#\n#\n#",
                  "properties": {
                    "sentinel": {
                      "default": 26379,
                      "required": [],
                      "title": "sentinel",
                      "type": "integer"
                    },
                    "valkey": {
                      "default": 6379,
                      "required": [],
                      "title": "valkey",
                      "type": "integer"
                    }
                  },
                  "required": [],
                  "title": "ports",
                  "type": "object"
                },
                "sessionAffinity": {
                  "default": "None",
                  "description": "#\n# If \"ClientIP\", consecutive client requests will be directed to the same Pod\n# ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n#",
                  "required": [],
                  "title": "sessionAffinity",
                  "type": "string"
                },
                "sessionAffinityConfig": {
                  "additionalProperties": false,
                  "description": "#\n# sessionAffinityConfig:\n#   clientIP:\n#     timeoutSeconds: 300\n#",
                  "required": [],
                  "title": "sessionAffinityConfig",
                  "type": "object"
                },
                "type": {
                  "default": "ClusterIP",
                  "description": "#\n#",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            },
            "startupProbe": {
              "additionalProperties": false,
              "description": "# Configure extra options for Valkey containers' liveness and readiness probes\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "failureThreshold": {
                  "default": 22,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 10,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                },
                "successThreshold": {
                  "default": 1,
                  "required": [],
                  "title": "successThreshold",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "startupProbe",
              "type": "object"
            },
            "terminationGracePeriodSeconds": {
              "default": 30,
              "description": "#\n#",
              "required": [],
              "title": "terminationGracePeriodSeconds",
              "type": "integer"
            },
            "valkeyShutdownWaitFailover": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "valkeyShutdownWaitFailover",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "sentinel",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": false,
          "description": "# ServiceAccount configuration\n#",
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "description": "#\n#",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automountServiceAccountToken": {
              "default": false,
              "description": "#\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server\n#",
              "required": [],
              "title": "automountServiceAccountToken",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "description": "#\n# If not set and create is true, a name is generated using the common.names.fullname template\n#",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "serviceBindings": {
          "additionalProperties": false,
          "description": "#\n# Ref: https://servicebinding.io/service-provider/\n#",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "serviceBindings",
          "type": "object"
        },
        "tls": {
          "additionalProperties": false,
          "description": "# TLS configuration\n#",
          "properties": {
            "authClients": {
              "default": true,
              "description": "#\n#",
              "required": [],
              "title": "authClients",
              "type": "boolean"
            },
            "autoGenerated": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "autoGenerated",
              "type": "boolean"
            },
            "certCAFilename": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "certCAFilename",
              "type": "string"
            },
            "certFilename": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "certFilename",
              "type": "string"
            },
            "certKeyFilename": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "certKeyFilename",
              "type": "string"
            },
            "dhParamsFilename": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "dhParamsFilename",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "existingSecret": {
              "default": "",
              "description": "#\n#",
              "required": [],
              "title": "existingSecret",
              "type": "string"
            }
          },
          "required": [],
          "title": "tls",
          "type": "object"
        },
        "useExternalDNS": {
          "additionalProperties": false,
          "description": "#\n#\n#\n#\n#\n#\n#",
          "properties": {
            "additionalAnnotations": {
              "additionalProperties": false,
              "required": [],
              "title": "additionalAnnotations",
              "type": "object"
            },
            "annotationKey": {
              "default": "external-dns.alpha.kubernetes.io/",
              "required": [],
              "title": "annotationKey",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "suffix": {
              "default": "",
              "required": [],
              "title": "suffix",
              "type": "string"
            }
          },
          "required": [],
          "title": "useExternalDNS",
          "type": "object"
        },
        "useHostnames": {
          "default": true,
          "description": "#\n#",
          "required": [],
          "title": "useHostnames",
          "type": "boolean"
        },
        "volumePermissions": {
          "additionalProperties": false,
          "description": "# 'volumePermissions' init container parameters\n# Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values\n#   based on the *podSecurityContext/*containerSecurityContext parameters\n#",
          "properties": {
            "containerSecurityContext": {
              "additionalProperties": false,
              "description": "# Init container Container Security Context\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n#\n#\n# NOTE: when runAsUser is set to special value \"auto\", init container will try to chown the\n#   data folder to auto-determined user\u0026group, using commands: `id -u`:`id -G | cut -d\" \" -f2`\n#   \"auto\" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)\n#",
              "properties": {
                "runAsUser": {
                  "default": 0,
                  "required": [],
                  "title": "runAsUser",
                  "type": "integer"
                },
                "seLinuxOptions": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "seLinuxOptions",
                  "type": "object"
                }
              },
              "required": [],
              "title": "containerSecurityContext",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "#\n#",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "image": {
              "additionalProperties": false,
              "description": "# OS Shell + Utility image\n# ref: https://hub.docker.com/r/bitnami/os-shell/tags/\n#\n#\n#\n#\n#\n#\n#",
              "properties": {
                "digest": {
                  "default": "",
                  "required": [],
                  "title": "digest",
                  "type": "string"
                },
                "pullPolicy": {
                  "default": "IfNotPresent",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "pullSecrets": {
                  "description": "# Optionally specify an array of imagePullSecrets.\n# Secrets must be manually created in the namespace.\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n# e.g:\n# pullSecrets:\n#   - myRegistryKeySecretName\n#",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "pullSecrets",
                  "type": "array"
                },
                "registry": {
                  "default": "docker.io",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "bitnami/os-shell",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "12-debian-12-r40",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "resources": {
              "additionalProperties": false,
              "description": "#\n# Example:\n# resources:\n#   requests:\n#     cpu: 2\n#     memory: 512Mi\n#   limits:\n#     cpu: 3\n#     memory: 1024Mi\n#",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "resourcesPreset": {
              "default": "nano",
              "description": "# Init container's resource requests and limits\n# ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n#\n# More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15\n#",
              "required": [],
              "title": "resourcesPreset",
              "type": "string"
            }
          },
          "required": [],
          "title": "volumePermissions",
          "type": "object"
        }
      },
      "required": [],
      "title": "valkey",
      "type": "object"
    },
    "versionNotifications": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Whether to request notifications about new n8n versions",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "endpoint": {
          "default": "https://api.n8n.io/api/versions/",
          "description": "Endpoint to retrieve n8n version information from",
          "required": [],
          "title": "endpoint",
          "type": "string"
        },
        "infoUrl": {
          "default": "https://docs.n8n.io/hosting/installation/updating/",
          "description": "URL for versions panel to page instructing user on how to update n8n instance",
          "required": [],
          "title": "infoUrl",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "endpoint",
        "infoUrl"
      ],
      "title": "versionNotifications",
      "type": "object"
    },
    "webhook": {
      "additionalProperties": false,
      "description": "Webhook node configurations",
      "properties": {
        "affinity": {
          "additionalProperties": false,
          "description": "Webhook node affinity. For more information checkout: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "allNodes": {
          "default": false,
          "description": "If true, all k8s nodes will deploy exatly one webhook pod",
          "required": [],
          "title": "allNodes",
          "type": "boolean"
        },
        "autoscaling": {
          "additionalProperties": false,
          "description": "If true, the number of webhooks will be automatically scaled based on default metrics. On default, it will scale based on CPU. Scale by requests can be done by setting a custom metric. For more information can be found here: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/",
          "properties": {
            "behavior": {
              "additionalProperties": false,
              "description": "The behavior of the autoscaler.",
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Whether autoscaling is enabled.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 10,
              "description": "The maximum number of replicas.",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "metrics": {
              "description": "The metrics to use for autoscaling.",
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "resource": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "default": "cpu",
                            "required": [],
                            "title": "name",
                            "type": "string"
                          },
                          "target": {
                            "additionalProperties": false,
                            "properties": {
                              "averageUtilization": {
                                "default": 80,
                                "required": [],
                                "title": "averageUtilization",
                                "type": "integer"
                              },
                              "type": {
                                "default": "Utilization",
                                "required": [],
                                "title": "type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "averageUtilization"
                            ],
                            "title": "target",
                            "type": "object"
                          }
                        },
                        "required": [
                          "name",
                          "target"
                        ],
                        "title": "resource",
                        "type": "object"
                      },
                      "type": {
                        "default": "Resource",
                        "required": [],
                        "title": "type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "resource"
                    ],
                    "type": "object"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "metrics",
              "type": "array"
            },
            "minReplicas": {
              "default": 2,
              "description": "The minimum number of replicas.",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            }
          },
          "required": [
            "enabled",
            "minReplicas",
            "maxReplicas",
            "metrics",
            "behavior"
          ],
          "title": "autoscaling",
          "type": "object"
        },
        "count": {
          "default": 2,
          "description": "Static number of webhooks. If allNodes or autoscaling is enabled, this value will be ignored.",
          "required": [],
          "title": "count",
          "type": "integer"
        },
        "extraContainers": {
          "description": "Additional containers for the webhook pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnvVars": {
          "additionalProperties": false,
          "description": "Extra environment variables",
          "required": [],
          "title": "extraEnvVars",
          "type": "object"
        },
        "extraSecretNamesForEnvFrom": {
          "description": "Extra secrets for environment variables",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraSecretNamesForEnvFrom",
          "type": "array"
        },
        "hostAliases": {
          "description": "Host aliases for the webhook pod. For more information checkout: https://kubernetes.io/docs/tasks/network/customize-hosts-file-for-pods/#adding-additional-entries-with-hostaliases",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "initContainers": {
          "description": "Additional init containers for the webhook pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": false,
          "description": "This is to setup the liveness probe for the webhook pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "livenessProbe",
          "type": "object"
        },
        "mcp": {
          "additionalProperties": false,
          "description": "MCP webhook configuration. This is only used when the webhook mode is set to `queue` and the database type is set to `postgresdb`.",
          "properties": {
            "affinity": {
              "additionalProperties": false,
              "description": "Webhook node affinity for the mcp webhook pod. For more information checkout: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "description": "Whether to enable MCP webhook",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "extraContainers": {
              "description": "Additional containers for the mcp webhook pod",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraContainers",
              "type": "array"
            },
            "extraEnvVars": {
              "additionalProperties": false,
              "description": "Extra environment variables for the mcp webhook pod",
              "required": [],
              "title": "extraEnvVars",
              "type": "object"
            },
            "extraSecretNamesForEnvFrom": {
              "description": "Extra secrets for environment variables for the mcp webhook pod",
              "items": {
                "required": []
              },
              "required": [],
              "title": "extraSecretNamesForEnvFrom",
              "type": "array"
            },
            "hostAliases": {
              "description": "Host aliases for the mcp webhook pod. For more information checkout: https://kubernetes.io/docs/tasks/network/customize-hosts-file-for-pods/#adding-additional-entries-with-hostaliases",
              "items": {
                "required": []
              },
              "required": [],
              "title": "hostAliases",
              "type": "array"
            },
            "initContainers": {
              "description": "Additional init containers for the mcp webhook pod",
              "items": {
                "required": []
              },
              "required": [],
              "title": "initContainers",
              "type": "array"
            },
            "livenessProbe": {
              "additionalProperties": false,
              "description": "This is to setup the liveness probe for the mcp webhook pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
              "properties": {
                "httpGet": {
                  "additionalProperties": false,
                  "properties": {
                    "path": {
                      "default": "/healthz",
                      "required": [],
                      "title": "path",
                      "type": "string"
                    },
                    "port": {
                      "default": "http",
                      "required": [],
                      "title": "port",
                      "type": "string"
                    }
                  },
                  "required": [
                    "path",
                    "port"
                  ],
                  "title": "httpGet",
                  "type": "object"
                }
              },
              "required": [
                "httpGet"
              ],
              "title": "livenessProbe",
              "type": "object"
            },
            "readinessProbe": {
              "additionalProperties": false,
              "description": "This is to setup the readiness probe for the mcp webhook pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
              "properties": {
                "httpGet": {
                  "additionalProperties": false,
                  "properties": {
                    "path": {
                      "default": "/healthz/readiness",
                      "required": [],
                      "title": "path",
                      "type": "string"
                    },
                    "port": {
                      "default": "http",
                      "required": [],
                      "title": "port",
                      "type": "string"
                    }
                  },
                  "required": [
                    "path",
                    "port"
                  ],
                  "title": "httpGet",
                  "type": "object"
                }
              },
              "required": [
                "httpGet"
              ],
              "title": "readinessProbe",
              "type": "object"
            },
            "resources": {
              "additionalProperties": false,
              "description": "This block is for setting up the resource management for the mcp webhook pod more information can be found here: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "startupProbe": {
              "additionalProperties": false,
              "description": "This is to setup the startup probe for the mcp webhook pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
              "properties": {
                "exec": {
                  "additionalProperties": false,
                  "properties": {
                    "command": {
                      "items": {
                        "anyOf": [
                          {
                            "required": [],
                            "type": "string"
                          },
                          {
                            "required": [],
                            "type": "string"
                          },
                          {
                            "required": [],
                            "type": "string"
                          }
                        ],
                        "required": []
                      },
                      "required": [],
                      "title": "command",
                      "type": "array"
                    }
                  },
                  "required": [
                    "command"
                  ],
                  "title": "exec",
                  "type": "object"
                },
                "failureThreshold": {
                  "default": 30,
                  "required": [],
                  "title": "failureThreshold",
                  "type": "integer"
                },
                "initialDelaySeconds": {
                  "default": 10,
                  "required": [],
                  "title": "initialDelaySeconds",
                  "type": "integer"
                },
                "periodSeconds": {
                  "default": 5,
                  "required": [],
                  "title": "periodSeconds",
                  "type": "integer"
                }
              },
              "required": [
                "exec",
                "initialDelaySeconds",
                "periodSeconds",
                "failureThreshold"
              ],
              "title": "startupProbe",
              "type": "object"
            },
            "volumeMounts": {
              "description": "Additional volumeMounts on the output Deployment definition for the mcp webhook pod",
              "items": {
                "required": []
              },
              "required": [],
              "title": "volumeMounts",
              "type": "array"
            },
            "volumes": {
              "description": "Additional volumes on the output Deployment definition for the mcp webhook pod",
              "items": {
                "required": []
              },
              "required": [],
              "title": "volumes",
              "type": "array"
            }
          },
          "required": [
            "enabled",
            "resources",
            "startupProbe",
            "livenessProbe",
            "readinessProbe",
            "extraEnvVars",
            "extraSecretNamesForEnvFrom",
            "volumes",
            "volumeMounts",
            "initContainers",
            "extraContainers",
            "affinity",
            "hostAliases"
          ],
          "title": "mcp",
          "type": "object"
        },
        "mode": {
          "default": "regular",
          "description": "Use `regular` to use main node as webhook node, or use `queue` to have webhook nodes",
          "required": [],
          "title": "mode",
          "type": "string"
        },
        "pdb": {
          "additionalProperties": false,
          "description": "Whether to enable the PodDisruptionBudget for the webhook pod",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Whether to enable the PodDisruptionBudget",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": 0,
              "description": "Maximum number of unavailable replicas",
              "required": [],
              "title": "maxUnavailable",
              "type": "integer"
            },
            "minAvailable": {
              "default": 1,
              "description": "Minimum number of available replicas",
              "required": [],
              "title": "minAvailable",
              "type": "integer"
            }
          },
          "required": [
            "enabled",
            "minAvailable",
            "maxUnavailable"
          ],
          "title": "pdb",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": false,
          "description": "This is to setup the readiness probe for the webhook pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz/readiness",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "readinessProbe",
          "type": "object"
        },
        "resources": {
          "additionalProperties": false,
          "description": "This block is for setting up the resource management for the webhook pod more information can be found here: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "runtimeClassName": {
          "default": "",
          "description": "Runtime class name for the webhook pod. For more information checkout: https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "required": [],
          "title": "runtimeClassName",
          "type": "string"
        },
        "startupProbe": {
          "additionalProperties": false,
          "description": "This is to setup the startup probe for the webhook pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "properties": {
            "exec": {
              "additionalProperties": false,
              "properties": {
                "command": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      },
                      {
                        "required": [],
                        "type": "string"
                      },
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "command",
                  "type": "array"
                }
              },
              "required": [
                "command"
              ],
              "title": "exec",
              "type": "object"
            },
            "failureThreshold": {
              "default": 30,
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 10,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 5,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [
            "exec",
            "initialDelaySeconds",
            "periodSeconds",
            "failureThreshold"
          ],
          "title": "startupProbe",
          "type": "object"
        },
        "url": {
          "default": "",
          "description": "Webhook url together with http or https schema",
          "required": [],
          "title": "url",
          "type": "string"
        },
        "volumeMounts": {
          "description": "Additional volumeMounts on the output Deployment definition.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumeMounts",
          "type": "array"
        },
        "volumes": {
          "description": "Additional volumes on the output Deployment definition.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumes",
          "type": "array"
        },
        "waitMainNodeReady": {
          "additionalProperties": false,
          "description": "This is to setup the wait for the webhook node to be ready.",
          "properties": {
            "additionalParameters": {
              "description": "The additional parameters to use part of wget command. e.g. --no-check-certificate",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalParameters",
              "type": "array"
            },
            "enabled": {
              "default": false,
              "description": "Whether to enable the wait for the webhook node to be ready.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "healthCheckPath": {
              "default": "/healthz",
              "description": "The health check path to use for request to the main node.",
              "required": [],
              "title": "healthCheckPath",
              "type": "string"
            },
            "overwriteSchema": {
              "default": "",
              "description": "The schema to use for request to the main node. On default, it will use identify the schema from the main N8N_PROTOCOL environment variable or use http.",
              "required": [],
              "title": "overwriteSchema",
              "type": "string"
            },
            "overwriteUrl": {
              "default": "",
              "description": "The URL to use for request to the main node. On default, it will use service name and port.",
              "required": [],
              "title": "overwriteUrl",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "overwriteSchema",
            "overwriteUrl",
            "healthCheckPath",
            "additionalParameters"
          ],
          "title": "waitMainNodeReady",
          "type": "object"
        }
      },
      "required": [
        "mode",
        "url",
        "count",
        "allNodes",
        "mcp",
        "autoscaling",
        "pdb",
        "waitMainNodeReady",
        "resources",
        "startupProbe",
        "livenessProbe",
        "readinessProbe",
        "extraEnvVars",
        "extraSecretNamesForEnvFrom",
        "volumes",
        "volumeMounts",
        "initContainers",
        "extraContainers",
        "affinity",
        "hostAliases",
        "runtimeClassName"
      ],
      "title": "webhook",
      "type": "object"
    },
    "worker": {
      "additionalProperties": false,
      "description": "Worker node configurations",
      "properties": {
        "affinity": {
          "additionalProperties": false,
          "description": "Worker node affinity. For more information checkout: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity",
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "allNodes": {
          "default": false,
          "description": "If true, all k8s nodes will deploy exatly one worker pod",
          "required": [],
          "title": "allNodes",
          "type": "boolean"
        },
        "autoscaling": {
          "additionalProperties": false,
          "description": "If true, the number of workers will be automatically scaled based on default metrics. On default, it will scale based on CPU and memory. For more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/",
          "properties": {
            "behavior": {
              "additionalProperties": false,
              "description": "The behavior of the autoscaler.",
              "required": [],
              "title": "behavior",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Whether autoscaling is enabled.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 10,
              "description": "The maximum number of replicas.",
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "metrics": {
              "description": "The metrics to use for autoscaling.",
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "resource": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "default": "memory",
                            "required": [],
                            "title": "name",
                            "type": "string"
                          },
                          "target": {
                            "additionalProperties": false,
                            "properties": {
                              "averageUtilization": {
                                "default": 80,
                                "required": [],
                                "title": "averageUtilization",
                                "type": "integer"
                              },
                              "type": {
                                "default": "Utilization",
                                "required": [],
                                "title": "type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "averageUtilization"
                            ],
                            "title": "target",
                            "type": "object"
                          }
                        },
                        "required": [
                          "name",
                          "target"
                        ],
                        "title": "resource",
                        "type": "object"
                      },
                      "type": {
                        "default": "Resource",
                        "required": [],
                        "title": "type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "resource"
                    ],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "resource": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "default": "cpu",
                            "required": [],
                            "title": "name",
                            "type": "string"
                          },
                          "target": {
                            "additionalProperties": false,
                            "properties": {
                              "averageUtilization": {
                                "default": 80,
                                "required": [],
                                "title": "averageUtilization",
                                "type": "integer"
                              },
                              "type": {
                                "default": "Utilization",
                                "required": [],
                                "title": "type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "averageUtilization"
                            ],
                            "title": "target",
                            "type": "object"
                          }
                        },
                        "required": [
                          "name",
                          "target"
                        ],
                        "title": "resource",
                        "type": "object"
                      },
                      "type": {
                        "default": "Resource",
                        "required": [],
                        "title": "type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "resource"
                    ],
                    "type": "object"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "metrics",
              "type": "array"
            },
            "minReplicas": {
              "default": 2,
              "description": "The minimum number of replicas.",
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            }
          },
          "required": [
            "enabled",
            "minReplicas",
            "maxReplicas",
            "metrics",
            "behavior"
          ],
          "title": "autoscaling",
          "type": "object"
        },
        "concurrency": {
          "default": 10,
          "description": "number of concurrency for each worker",
          "required": [],
          "title": "concurrency",
          "type": "integer"
        },
        "count": {
          "default": 2,
          "description": "Static number of workers. If allNodes or autoscaling is enabled, this value will be ignored.",
          "required": [],
          "title": "count",
          "type": "integer"
        },
        "extraContainers": {
          "description": "Additional containers for the worker pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnvVars": {
          "additionalProperties": false,
          "description": "Extra environment variables",
          "required": [],
          "title": "extraEnvVars",
          "type": "object"
        },
        "extraSecretNamesForEnvFrom": {
          "description": "Extra secrets for environment variables",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraSecretNamesForEnvFrom",
          "type": "array"
        },
        "forceToUseStatefulset": {
          "default": false,
          "description": "Force to use statefulset for the worker pod. If true, the worker pod will be created as a statefulset.",
          "required": [],
          "title": "forceToUseStatefulset",
          "type": "boolean"
        },
        "hostAliases": {
          "description": "Host aliases for the worker pod. For more information checkout: https://kubernetes.io/docs/tasks/network/customize-hosts-file-for-pods/#adding-additional-entries-with-hostaliases",
          "items": {
            "required": []
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "initContainers": {
          "description": "Additional init containers for the worker pod",
          "items": {
            "required": []
          },
          "required": [],
          "title": "initContainers",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": false,
          "description": "This is to setup the liveness probe for the worker pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "livenessProbe",
          "type": "object"
        },
        "mode": {
          "default": "regular",
          "description": "Use `regular` to use main node as executer, or use `queue` to have worker nodes",
          "required": [],
          "title": "mode",
          "type": "string"
        },
        "pdb": {
          "additionalProperties": false,
          "description": "Whether to enable the PodDisruptionBudget for the worker pod",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Whether to enable the PodDisruptionBudget",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "maxUnavailable": {
              "default": 0,
              "description": "Maximum number of unavailable replicas",
              "required": [],
              "title": "maxUnavailable",
              "type": "integer"
            },
            "minAvailable": {
              "default": 1,
              "description": "Minimum number of available replicas",
              "required": [],
              "title": "minAvailable",
              "type": "integer"
            }
          },
          "required": [
            "enabled",
            "minAvailable",
            "maxUnavailable"
          ],
          "title": "pdb",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": false,
          "description": "Persistence configuration for the worker pod",
          "properties": {
            "accessMode": {
              "default": "ReadWriteOnce",
              "description": "Access mode for persistence",
              "required": [],
              "title": "accessMode",
              "type": "string"
            },
            "annotations": {
              "additionalProperties": false,
              "description": "Annotations for persistence",
              "properties": {
                "helm.sh/resource-policy": {
                  "default": "keep",
                  "required": [],
                  "title": "helm.sh/resource-policy",
                  "type": "string"
                }
              },
              "required": [
                "helm.sh/resource-policy"
              ],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Whether to enable persistence",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "existingClaim": {
              "default": "",
              "description": "Existing claim to use for persistence",
              "required": [],
              "title": "existingClaim",
              "type": "string"
            },
            "labels": {
              "additionalProperties": false,
              "description": "Labels for persistence",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "mountPath": {
              "default": "/home/node/.n8n",
              "description": "Mount path for persistence",
              "required": [],
              "title": "mountPath",
              "type": "string"
            },
            "size": {
              "default": "8Gi",
              "description": "Size for persistence",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "",
              "description": "Storage class for persistence",
              "required": [],
              "title": "storageClass",
              "type": "string"
            },
            "subPath": {
              "default": "",
              "description": "Sub path for persistence",
              "required": [],
              "title": "subPath",
              "type": "string"
            },
            "volumeName": {
              "default": "",
              "description": "Name of the volume to use for persistence",
              "required": [],
              "title": "volumeName",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "volumeName",
            "existingClaim",
            "mountPath",
            "subPath",
            "storageClass",
            "accessMode",
            "size",
            "annotations",
            "labels"
          ],
          "title": "persistence",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": false,
          "description": "This is to setup the readiness probe for the worker pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz/readiness",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "readinessProbe",
          "type": "object"
        },
        "resources": {
          "additionalProperties": false,
          "description": "This block is for setting up the resource management for the worker pod more information can be found here: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "runtimeClassName": {
          "default": "",
          "description": "Runtime class name for the worker pod. For more information checkout: https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "required": [],
          "title": "runtimeClassName",
          "type": "string"
        },
        "startupProbe": {
          "additionalProperties": false,
          "description": "This is to setup the startup probe for the worker pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "properties": {
            "exec": {
              "additionalProperties": false,
              "properties": {
                "command": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      },
                      {
                        "required": [],
                        "type": "string"
                      },
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "command",
                  "type": "array"
                }
              },
              "required": [
                "command"
              ],
              "title": "exec",
              "type": "object"
            },
            "failureThreshold": {
              "default": 30,
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 10,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 5,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [
            "exec",
            "initialDelaySeconds",
            "periodSeconds",
            "failureThreshold"
          ],
          "title": "startupProbe",
          "type": "object"
        },
        "volumeMounts": {
          "description": "Additional volumeMounts on the output Deployment definition.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumeMounts",
          "type": "array"
        },
        "volumes": {
          "description": "Additional volumes on the output Deployment definition.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumes",
          "type": "array"
        },
        "waitMainNodeReady": {
          "additionalProperties": false,
          "description": "This is to setup the wait for the main node to be ready.",
          "properties": {
            "additionalParameters": {
              "description": "The additional parameters to use part of wget command. e.g. --no-check-certificate",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalParameters",
              "type": "array"
            },
            "enabled": {
              "default": false,
              "description": "Whether to enable the wait for the main node to be ready.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "healthCheckPath": {
              "default": "/healthz",
              "description": "The health check path to use for request to the main node.",
              "required": [],
              "title": "healthCheckPath",
              "type": "string"
            },
            "overwriteSchema": {
              "default": "",
              "description": "The schema to use for request to the main node. On default, it will use identify the schema from the main N8N_PROTOCOL environment variable or use http.",
              "required": [],
              "title": "overwriteSchema",
              "type": "string"
            },
            "overwriteUrl": {
              "default": "",
              "description": "The URL to use for request to the main node. On default, it will use service name and port.",
              "required": [],
              "title": "overwriteUrl",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "overwriteSchema",
            "overwriteUrl",
            "healthCheckPath",
            "additionalParameters"
          ],
          "title": "waitMainNodeReady",
          "type": "object"
        }
      },
      "required": [
        "mode",
        "concurrency",
        "count",
        "allNodes",
        "autoscaling",
        "pdb",
        "waitMainNodeReady",
        "resources",
        "startupProbe",
        "livenessProbe",
        "readinessProbe",
        "forceToUseStatefulset",
        "persistence",
        "extraEnvVars",
        "extraSecretNamesForEnvFrom",
        "volumes",
        "volumeMounts",
        "initContainers",
        "extraContainers",
        "affinity",
        "hostAliases",
        "runtimeClassName"
      ],
      "title": "worker",
      "type": "object"
    },
    "workflowHistory": {
      "additionalProperties": false,
      "description": "The workflow history configuration",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Whether to save workflow history versions",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "pruneTime": {
          "default": 336,
          "description": "Time (in hours) to keep workflow history versions for. To disable it, use -1 as a value",
          "required": [],
          "title": "pruneTime",
          "type": "integer"
        }
      },
      "required": [
        "enabled",
        "pruneTime"
      ],
      "title": "workflowHistory",
      "type": "object"
    }
  },
  "required": [
    "image",
    "imagePullSecrets",
    "nameOverride",
    "fullnameOverride",
    "strategy",
    "podAnnotations",
    "podLabels",
    "podSecurityContext",
    "securityContext",
    "log",
    "nodes",
    "npmRegistry",
    "binaryData",
    "db",
    "sentry",
    "diagnostics",
    "versionNotifications",
    "api",
    "license",
    "route",
    "main",
    "worker",
    "webhook",
    "taskRunners",
    "workflowHistory",
    "encryptionKey",
    "existingEncryptionKeySecret",
    "timezone",
    "defaultLocale",
    "gracefulShutdownTimeout",
    "ingress",
    "serviceMonitor",
    "redis",
    "externalRedis",
    "postgresql",
    "externalPostgresql",
    "minio",
    "nodeSelector",
    "tolerations",
    "affinity",
    "dnsPolicy",
    "dnsConfig",
    "valkey"
  ],
  "type": "object"
}